<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CQH.CH</title>
  
  <subtitle>Capital of Quant and Hedge</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://log.cqh.ch/"/>
  <updated>2020-03-08T12:12:31.373Z</updated>
  <id>http://log.cqh.ch/</id>
  
  <author>
    <name>CQH.CH</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数据分析-货币基金研究</title>
    <link href="http://log.cqh.ch/20/found.html"/>
    <id>http://log.cqh.ch/20/found.html</id>
    <published>2020-03-07T16:00:00.000Z</published>
    <updated>2020-03-08T12:12:31.373Z</updated>
    
    <content type="html"><![CDATA[<p>在大学的时候，我曾好奇过货币基金的七日年化收益率是如何求得的？于是我去查了百度百科，得到如下解答：</p><p><a href="https://baike.baidu.com/history/%E4%B8%83%E6%97%A5%E5%B9%B4%E5%8C%96%E6%94%B6%E7%9B%8A%E7%8E%87/805334/67847238" target="_blank" rel="noopener">七日年化收益率(2014-11-07百度百科历史版本)</a>。<br><img src="qrnhsyl.png" alt="七日年化收益率" title="七日年化收益率"><br>单利计算公式为：（∑Ri/7）×365/10000份×100%，复利计算公式为：（∑Ri/10000份）365/7×100%。<br>很遗憾，这个算法是有问题的，根据其算出的收益率和实际公布的是不一致的，由此给我遗留了一个未决的问题，也启发了我<strong>百度不可尽信。</strong></p><p>直到前几天，我点开了一个<a href="https://www.bilibili.com/video/av87824738" target="_blank" rel="noopener">均值不等式链的几何证明</a>视频，我惊叹这个证明的巧妙的同时也回想起了这个问题，原来解决“七日年化收益率”知识在高中就已经具备了。单利可用算术平均，复利则用几何平均。<br>很庆幸的是，目前的百度百科词条似乎已经更正了该错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">货币市场基金存在两种收益结转方式：</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">一是“月月分红，按月结转”，二是“日日分红，按日结转”，</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">不管是按日结转还是按月结转，都相当于复利。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">复利计算公式为：&#123;[π（1+Ri&#x2F;10000）]^（365&#x2F;7）-1&#125;×100% π表示连乘 i&#x3D;1。。。7</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">其中，Ri为最近第i公历日（i&#x3D;1,2…..7）的每万份收益</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">基金七日年收益率采取四舍五入方式保留小数点后三位。</span></pre></td></tr></table></figure><p>但真的没有问题吗？按日结转可以直接套用复利公式是没有疑问的，但按月甚或更长期间结转显然是不能套用的，因为在结转日之前收益并不会结转为本金的一部分，在未结转期间实际上相当于单利的。<br>那么在实际中按月结转的货币基金是如何计算年化收益率的呢？空说无凭，以下是根据<a href="http://fund.eastmoney.com/000829.html" target="_blank" rel="noopener">易方达天天发货币A 000829(结转日为每月15日)</a>的2020年1月的数据演算。<br><img src="yfd202001.png" alt="2020年1月易方达天天发货币A000829演算" title="2020年1月易方达天天发货币A000829演算"><br>上图中，C/E/H列分别为基金公司公布的七日年化收益率、根据每万份收益推算的算术平均年化收益率、根据每万份收益推算的几何平均年化收益率。从数据中可以得出，易方达公布的是按每日复利计算的几何平均数。而在前面我的结论是，按月结转显然是不能直接套用的复利公式的，那么是我错了吗？鲁鲁修那句名言是怎么说的来着？<br><img src="fault.jpg" alt="错的不是我，是这个世界" title="错的不是我，是这个世界"><br>根据均值不等式，可以知道几何平均≤算术平均，D列会大于G列（差异很小，取四位有效数字时基本看不出差别，到第六位后才会出现差异）。但是反过来却不成立，相反E列似乎总是小于H列（这种关系该如何用数学证明呢？）。所以易方达的数据实际上把年化收益率算大了。<br>由此我得出的结论是，<strong>不能盲目相信别人给出的东西，需要数据支持的话，得学会自己分析处理</strong>。</p><p>习总告诫我们：<strong>不忘初心，牢记使命</strong>。当初我之所以想知道年化收益率的算法是因为在玩余额宝的时候，看到类似以下的趋势图：<br>余额宝1月收益走势<br><img src="yeb1m.png" alt="余额宝1月收益走势" title="余额宝1月收益走势"><br>余额宝成立以来收益走势<br><img src="yebmax.png" alt="余额宝成立以来收益走势" title="余额宝成立以来收益走势"><br>在这两张图中，每万分收益和七日年化收益率，从起初一点也不相似的趋势，随着时间的增加会变得越来越像，它们之间有何关联？当初的我确实无法解答这个问题，但现在我觉得终于有能力了。</p><p>还是以2020年1月易方达天天发货币A000829的数据演算<br><img src="yfd202001b.png" alt="2020年1月易方达天天发货币A000829演算2" title="2020年1月易方达天天发货币A000829演算2"><br>如果我们给每万分收益（灰线）添加一条7日移动平均趋势线（绿线），会发现绿线和红线基本重合（为什么说基本呢，因为据我所知办公表格的移动平均实际是采用算术平均算法，而根据公理及演算表可知，算术平均实际是大于几何平均的）。而移动平均线（红线或绿线）和七日年化收益率（蓝线）走势很相似。</p><p>知道这个有什么用呢？根据年化收益率单利公式，我们很容易就知道哦，年化收益率就是将某个每万分收益缩放0.0365倍，换句话说将每万分收益的坐标轴y1缩放0.0365倍就可以得到年化收益率的坐标轴y2，这样我们就可以在一个绘图中只用每万分收益及其移动平均线就解算出所需的信息来。进一步的，通过自动义移动均线的算法及参数，可以定制快线和慢线。更进一步的，如果将基金按资产配置份额分解再演算，那么股票市场的那一套分析方法将能应用到基金市场。到了这一步，我感觉自己的知识储备不够用了。<strong>才华支撑不起野心，还是应该多读些书…</strong></p>]]></content>
    
    <summary type="html">
    
      货币基金的七日年化收益率是如何求得的？单利可用算术平均，复利则用几何平均。不能盲目相信别人给出的东西，需要数据支持的话，得学会自己分析处理
    
    </summary>
    
    
      <category term="数据分析" scheme="http://log.cqh.ch/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    
      <category term="基金" scheme="http://log.cqh.ch/tags/%E5%9F%BA%E9%87%91/"/>
    
  </entry>
  
  <entry>
    <title>数据分析-生长曲线设想与应用</title>
    <link href="http://log.cqh.ch/20/growth-curve.html"/>
    <id>http://log.cqh.ch/20/growth-curve.html</id>
    <published>2020-02-10T16:00:00.000Z</published>
    <updated>2020-03-08T12:09:51.733Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="yuan-qi">原起</span><a href="#yuan-qi" class="header-anchor"></a></h2><ul><li>临床实践中，一般用体重换算药物剂量。在审方的过程中，经常需要参考体重数据。</li><li>在学习《儿科学》的过程中，我了解到生长曲线在体格评价的作用。</li><li>既然我们是儿童医院，一方面有临床的需要，另一方面负责保健的工作，那么不开发一个生长曲线的工具呢？</li><li>在临床药学的培训时，我想到可以开发一个用生长曲线自动计算药物剂量的工具。如果处方系统能调用这一工具，那对合理用药将有极大的助益。</li><li>眼下正在做的处方集，当然也可以调用这一工具。</li><li>暂不考虑太久远的事情，如何实现数据的可视化才是当下要解决的问题。</li><li>涉及移植和集成，不打算使用办公软件。用Python当然最快速，但要医生普及Python还是不现实。</li><li>最终决定用JavaScript，使用echartsjs。选择echartsjs其实很简单，因其文档是中文学习成本低，且案例丰富。</li><li>为了”合理用药”去学JavaScript数据可视化？当然太虚无缥缈。</li><li>但一想到金融数据的可视化能够带来的真金白银，瞬间就有动力了。</li></ul><h2><span id="shu-ju">数据</span><a href="#shu-ju" class="header-anchor"></a></h2><p>要找一份直接可用的数据并不容易，最后我选择了最笨的办法——自己动手。当然我不会傻到一个一个的手敲，而是找了4张图片做光学识别。所幸辨认度高，适当修正就得到了。<br>我得到的数据有两个问题：一是无法确保数据来源真实可靠，二是只包含了0到6岁的数据。拿来练手是没有问题，但如果用来指导临床还是得解决前面的问题才是。</p><p>男婴幼儿体重表<br><img src="gc-bw.jpg" alt="男婴幼儿体重表" title="男婴幼儿体重表"></p><p>男婴幼儿身高表<br><img src="gc-bh.jpg" alt="男婴幼儿身高表" title="女婴幼儿身高表"></p><p>女婴幼儿体重表<br><img src="gc-gw.jpg" alt="女婴幼儿体重表" title="女婴幼儿体重表"></p><p>女婴幼儿身高表<br><img src="gc-gh.jpg" alt="女婴幼儿身高表" title="女婴幼儿身高表"></p><h2><span id="ke-shi-hua">可视化</span><a href="#ke-shi-hua" class="header-anchor"></a></h2><p>其实就是看文档，修改示例，Debug的循环。我并不熟悉JavaScript，磕磕碰碰，其中艰辛，外人可能无法体会。但当我终于调试出了我想要的东西，那是一种付出和收获的坦然。我知道我基本上学会了如何用JavaScript的数据可视化。</p><p>男婴幼儿生长曲线<br><img src="gc-boy.png" alt="男婴幼儿生长曲线" title="男婴幼儿生长曲线"></p><p>女婴幼儿生长曲线<br><img src="gc-girl.png" alt="女婴幼儿生长曲线" title="女婴幼儿生长曲线"></p><h2><span id="yi-bao-jian-wei-zhong-xin">以保健为中心</span><a href="#yi-bao-jian-wei-zhong-xin" class="header-anchor"></a></h2><p>我想起了医院“以保健为中心”的服务方针，我觉得这是妇保院该有的定位。因为在临床方面，妇保院无法和人民医院或中医院竞争。我曾参与过幼儿园的体检，负责的就是身高和体重的测量。现在想来，如果在报告上评估身体质量指数 (BMI)，并绘制生长曲线，那么这项工作会更有意义。不仅仅是幼儿体检，其实可以往前追溯到产检，用生长曲线评估孕程。这样就能打通妇女和儿童保健，从而实现连续性。更进一步的，不仅仅是身高和体重，其他数据也可以考虑可视化。这样下来妇保院将会在保健工作中脱颖而出。</p><h2><span id="shu-ju-gong-xiang">数据共享</span><a href="#shu-ju-gong-xiang" class="header-anchor"></a></h2><p>在卫生院，我参与过公共卫生的考核工作。健康扶贫出发很美好，但落到实处感觉并不美妙。很多工作流于形式，其中让我感触最深的还是健康档案，一方面数据真实性堪忧，另一方面数据并没有得到有效的利用。这让我想到了数据共享的问题：如何让原始数据方便快捷的传入公卫系统，如何让人获得清晰明了的数据视图。当前采用的先建纸档，再由纸档录电子档，这当然是低效的做法。数据应该在一手的时候就直接传入系统，也就是说很多测量仪器应该开发数据接口。试想一下，身高、体重、血压、血糖……可以直接传到计算机，这可以舍下多少录入的工作和纸张。</p><h2><span id="yao-xue-gong-ju">药学工具</span><a href="#yao-xue-gong-ju" class="header-anchor"></a></h2><p>我可能无法实现上面的设想，但最起码的我可以在我的本职工作中进行尝试。我希望实现一个可以根据体重或年龄算出药物用量的应用，实际上，如果有数据支撑，这是可以办到的。下面是一种简单实现：</p><p>在《实用儿科药物剂量速查手册  第5版》关于氨茶碱的用法用量：<br><img src="acj.png" alt="氨茶碱的用法用量" title="氨茶碱的用法用量"></p><p>从上可以看出用量跟体重成线性关系，为简便计取y=3x，将这条线和生长曲线相关后得到如下视图：<br><img src="gc-acj.png" alt="氨茶碱用量" title="氨茶碱用量"></p><p>在临床中，如果只有年龄信息(大多数门诊患者是这种情况)，那么可以生长曲线得到体重的数据，而得出参考药物用量。而如果能得到确切的体重数据(住院患者)，那么可以直接用体重计算出药物用量。</p><p>生成用量参考图表只是比较初级的玩法。如果可以将这种工具整合进处方系统，那么医生那里可以根据参考开具处方。而如果审方系统集成了这种工具，药师就能将剂量偏低和偏高的处方筛选出来，做进一步审核。</p>]]></content>
    
    <summary type="html">
    
      生成用量参考图表只是比较初级的玩法。如果可以将这种工具整合进处方系统，那么就可以在医生那里可以根据参考开具处方。而如果审方系统集成了这种工具，药师就能将剂量偏低和偏高的处方筛选出来，做进一步审核。
    
    </summary>
    
    
      <category term="数据分析" scheme="http://log.cqh.ch/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    
      <category term="echartsjs" scheme="http://log.cqh.ch/tags/echartsjs/"/>
    
  </entry>
  
  <entry>
    <title>民间借贷风险规避指南</title>
    <link href="http://log.cqh.ch/20/credit.html"/>
    <id>http://log.cqh.ch/20/credit.html</id>
    <published>2020-01-15T16:00:00.000Z</published>
    <updated>2020-01-17T03:19:02.950Z</updated>
    
    <content type="html"><![CDATA[<p>民间借贷，说通俗点就是借钱，其实是一件很复杂的事情。倒不是说流程有多烦杂，而是关系可能会变得异常复杂。人品好的话，或是双赢；人品差的话，人财两空。我觉得应该设置一套标准的处理方式，先最大程度保障自身，再尽量去帮助别人。这篇文章假设人性本恶，即人都是自私利己的。</p><h2><span id="feng-xian-ping-gu">风险评估</span><a href="#feng-xian-ping-gu" class="header-anchor"></a></h2><p>最简单直接的就是索要征信报告。本人带上身份证去中国人民银行（不是中国银行）就可以免费得到。如果都敢叫板银行，奉劝还是算了吧。多个心眼的话，还可以去裁判文书网检索一下看是否有案底。做完这一步，基本上可以暴露过恶人给过滤掉，但对那些潜藏的恶人，无能为力。</p><h2><span id="qi-yue">契约</span><a href="#qi-yue" class="header-anchor"></a></h2><p>假使风险评估看不出问题，那么你应当准备一份很难攻破的契约。<br>第一，确定主体。难道不是借款本人吗？并不完全是。如果对方已婚，那么将配偶拉进来是完全必要的，因为法院对夫妻共同债务的认定比较谨慎。如果可以的话，要求提供担保人。<br>第二，确定主体信息。核对第一步确定的主体的姓名，住址，身份证号码，电话号码，并要求留下身份证复印件。<br>第三，约定本金、借期和利息。涉及数字的，用大小写双确定。确保大写无误，因为若冲突一般以大写为准。利息的约定要尤其注意指定计息周期，比如年利率百分之二十四（24%/年）、月利率百分之二（2%/月），日利率万分之五（0.05%/日）。<br>第四，确定还款方式。到期一次还本付息风险过于不可控，宜定期还本付息，如此更好判断违约。<br>第五，确定违约及责任。强烈建议将“若因债务人违约而实现债权的合理费用由债务人承担”写进契约。这样才能减少后顾之忧。另法院是支持同时主张利息和违约金的，但不超过24%/年。你依然可以设立30%的违约金条款，这样好处是低利率时可以直接提到最高。<br>第六，签字捺印。如果内容涉及多页，每页均不可少，最起码的要骑缝签印。</p><h2><span id="su-song">诉讼</span><a href="#su-song" class="header-anchor"></a></h2><p>假使你不幸遇到了违约，如果你订立了一份前述契约的话，委托专业律师，然后将所有费用转嫁到违约方就好。<br>而如果你没有这么一份契约，首先尽你所能固定有利证据，想办法让对方补签协议，然后一纸诉状递到法院，不必同情没有诚信之人。<br>到了法院你要注意两点：<br>不诉不理。字面意思就是民事中不主动找法院它就不理会你，积极去主张你的权利就是。但其实你更该注意隐藏的意思，没写的诉求法院不会审理。所以在诉讼中尽量将你的利益最大化，一方面将所有被告（配偶、担保人）列齐（法院会拒绝执行未经审判的被申请人），另一方面诉求宁多不少。<br>谁主张谁举证。就是所有的主张都要有证据支撑，否则可能不被法院支持。同时这也是诉讼技巧，你不必非要证明真只要让人无法证伪就行。而对于那些自己无法获取的证据，比如婚姻、户籍、财产等信息，申请法院调查取证就好。</p><h2><span id="li-xi">利息</span><a href="#li-xi" class="header-anchor"></a></h2><p>不要羞于约定利息，但如果未曾设定风险转嫁的话，利息将会成为唯一保障。<br>最起码相当于银行存款利率，4%/年勉强对抗通货膨胀。<br>考虑诉讼风险，加10%律师费。<br>再考虑执行风险，加10%赏金，封顶24%/年。<br>所以对于一笔有风险的借贷，建议直接24%/年，或者加30%违约金。当然最理性的做法还是在前面的基础上再设定转嫁条款，将合理费用打包给对方。<br>总之，宁可先做小人收高利然后再以君子姿态去豁免，也不要爱心泛滥甘当孙子供祖宗。</p><h2><span id="xiang-dui-xing">相对性</span><a href="#xiang-dui-xing" class="header-anchor"></a></h2><p>债权具有相对性，即契约的效力只局限于设定它的人。夫妻共同债务虽是例外，但若举证婚姻期间的共同开支还是有些费神。故此，一开始就将配偶和担保人纳入债权范围（借款合约及诉求书），显然是明智之举。</p>]]></content>
    
    <summary type="html">
    
      民间借贷，其实是一件很复杂的事情。借钱之后的关系可能会变得异常复杂。先最大程度保障自身，再尽量去帮助别人。这篇文章假设人性本恶，即人都是自私利己的。
    
    </summary>
    
    
      <category term="法律" scheme="http://log.cqh.ch/categories/%E6%B3%95%E5%BE%8B/"/>
    
    
      <category term="民间借贷" scheme="http://log.cqh.ch/tags/%E6%B0%91%E9%97%B4%E5%80%9F%E8%B4%B7/"/>
    
  </entry>
  
  <entry>
    <title>革新记之药学服务-处方集</title>
    <link href="http://log.cqh.ch/20/formulary.html"/>
    <id>http://log.cqh.ch/20/formulary.html</id>
    <published>2020-01-01T16:00:00.000Z</published>
    <updated>2020-01-03T06:13:52.224Z</updated>
    
    <content type="html"><![CDATA[<p>医院处方集其实很久很久以前就已经提上了日程，扔到我手上后又被搁置了大半年，直到被流放到山高水长的五指峰后，我才真正有时间去做这项工作。</p><p>按我一开始的设想，打算写一个爬虫，根据药品目录抓取药品说明书，然后简单粗暴得合成格式文档，就此交差。虽然这样效率极高，但实际上就是汇编了一本说明书而已。直到我用markdown部署了博客之后，我想到了另一种可能：完全可以用markdown写处方集，然后解析成html制成网站部署在OA系统及github上。我花了一个星期，基本完成将这项工作的构架，后面的工作就是处方集具体内容的审阅和修订。</p><p>如果仅仅需要一个药品处方应用，选择用药助手或用药参考就行了，没有必要重新造轮子。但源于在赣医一附院临床药学的学习经历，让我意识到医院、医师和药师需要拥有自己的知识库。<br>其一，很多医院出于安全的考虑，基本会选择不连接公网，那么外部的应用并不能无缝地运用于工作中。比如，医生可能先要用手机看用药说明，再回到HIS开医嘱。<br>其二，临床药学的工作经常要引用药品的相关知识，逐字手打的效率实在太低。许是为解决这个问题，当时一附院的老师在做一个用药指导（分医师和患者）的文件归集工作，以便需要时直接复制粘帖。<br>其三，一附院的用药指导归集接近尾声时，老师在闲谈中表示如果可以做二维码那样的东西，那么药师的效率将更高。我觉得很容易实现，缺的只是指针应用而已。<br>其四，后来听说一附院引入了审方系统，老师们花费了大量时间制定审方规则。如果一开始就在处方集进行了这方面的细化，那么这项工作将变得很简单。</p><p>而因其无纸化，索引和检索变得不那么费力。而要实现索引和检索的功能，要么使用服务器和数据库，要么建立tag之类的属性。我选择的是不烧钱的tag，而这导致这个处方集演变成了一个旷日持久的项目。倒不是建立tag是多么复杂的事情，而是要建立的tag如此之多以至于文档会变得非常冗余，markdown已经不适用来建立我想要的东西。而因为CFDA对药品说明书有强制性规定，使得其本身变成了一种语言规范。也就是说没有必要将说明书转成markdown再转html，而是可以写一个解析器直接解析药品说明书，这才是更有效率的做法。</p>]]></content>
    
    <summary type="html">
    
      医院医师和药师需要拥有自己的知识库
    
    </summary>
    
    
      <category term="药事" scheme="http://log.cqh.ch/categories/%E8%8D%AF%E4%BA%8B/"/>
    
    
      <category term="处方集" scheme="http://log.cqh.ch/tags/%E5%A4%84%E6%96%B9%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>hexo gulp &#39;minify-html&#39; errored after x.xx s Error in plugin gulp-htmlmin</title>
    <link href="http://log.cqh.ch/19/gulp-err.html"/>
    <id>http://log.cqh.ch/19/gulp-err.html</id>
    <published>2019-12-23T16:00:00.000Z</published>
    <updated>2020-01-02T02:45:36.135Z</updated>
    
    <content type="html"><![CDATA[<p>用gulp优化hexo的时候，报错如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#39;minify-html&#39; errored after 5.24 s</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">Error in plugin &quot;gulp-htmlmin&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">Message:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    Parse Error:</span></pre></td></tr></table></figure><p>用的主题的next，启用默认的landscape主题后，gulp能正常工作，故此我认为是主题设计的bug。若你有debug的能力，de就是了；若没有而又要用gulp的功能，山不转水转，换一个能的主题就是了。</p>]]></content>
    
    <summary type="html">
    
      hexo gulp &#39;minify-html&#39; errored after x.xx s Error in plugin gulp-htmlmin
    
    </summary>
    
    
      <category term="hexo" scheme="http://log.cqh.ch/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://log.cqh.ch/tags/hexo/"/>
    
      <category term="gulp" scheme="http://log.cqh.ch/tags/gulp/"/>
    
  </entry>
  
  <entry>
    <title>Linux(manjaro/archlinux)下nodejs(npm) + hexo环境搭建</title>
    <link href="http://log.cqh.ch/19/nodejs-hexo.html"/>
    <id>http://log.cqh.ch/19/nodejs-hexo.html</id>
    <published>2019-12-23T07:53:50.000Z</published>
    <updated>2020-01-02T02:24:37.902Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="bei-jing">背景</span><a href="#bei-jing" class="header-anchor"></a></h2><p>因为最近穷成负翁，没钱给主机续费，个人网站关闭了一段时间。原本想用路由器的DDNS做内网渗透，这需要卡片电脑打造一台功率低7×24在线的低功率主机，虽有成就感但总感觉绕了很远的弯路。回想曾经用过的gitpages，感觉基本能满足我目前的需求，决定先采用hexo搭建，需要用到动态编程的时候，用跨域的ajax实现就好。我的Linux系统环境是manjaro-xfce-18.0.4-stable-x86_64，这篇文章主要是记录Linux(manjaro/archlinux)下nodejs(npm) + hexo环境搭建。</p><h2><span id="yong-pacman-zhi-jie-an-zhuang-nodejs-huan-jing-yi-lai">用pacman直接安装nodejs环境依赖。</span><a href="#yong-pacman-zhi-jie-an-zhuang-nodejs-huan-jing-yi-lai" class="header-anchor"></a></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">sudo pacman -S nodejs npm</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">#虽能顺利安装，但命令行键入node -v或npm -v时总是报错：</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">node: symbol lookup error: node: undefined symbol: nghttp2_option_set_max_outbound_ack</span></pre></td></tr></table></figure><p>详见<br><img src="nghttp2_option_set_max_outbound_ack.png" alt="node: symbol lookup error: node: undefined symbol: nghttp2_option_set_max_outbound_ack" title="node: symbol lookup error: node: undefined symbol: nghttp2_option_set_max_outbound_ack"><br>查阅资料说是编译的问题，而我不懂编译，只能放弃此道。</p><h2><span id="nodejs-org-wang-zhan-xia-zai-linux-binaries-x64-bao">nodejs.org网站下载Linux Binaries (x64)包</span><a href="#nodejs-org-wang-zhan-xia-zai-linux-binaries-x64-bao" class="header-anchor"></a></h2><p>打开链接<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a><br>下载Linux Binaries (x64)<br>本地解压后，复制到你的安装目录(比如/usr/local/或/app/)<br><strong>注意：如果选择安装目录非 /usr/local/，则以后但凡npm全局安装某个应用包时npm install -g，均须建立软链接到 /usr/local/，否则终端将无法使用对应的命令。</strong><br>然后建立node与npm的软链接<br>命令行操作如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;nodejs.org&#x2F;dist&#x2F;v12.14.0&#x2F;node-v12.14.0-linux-x64.tar.xz #下载</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">tar xf node-v12.14.0-linux-x64.tar.xz #解压</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">sudo mv node-v10.16.0-linux-x64 &#x2F;app&#x2F;node-v10.16.0-linux-x64 #移动</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">sudo ln -s &#x2F;app&#x2F;node-v12.13.1-linux-x64&#x2F;bin&#x2F;node &#x2F;usr&#x2F;local&#x2F;bin&#x2F;node #建立软链接</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">sudo ln -s &#x2F;app&#x2F;node-v12.13.1-linux-x64&#x2F;bin&#x2F;npm &#x2F;usr&#x2F;local&#x2F;bin&#x2F;npm</span></pre></td></tr></table></figure><p>命令行键入node -v或npm -v会出现版本号说明nodejs环境搭建成功。</p><h2><span id="an-zhuang-hexo">安装hexo</span><a href="#an-zhuang-hexo" class="header-anchor"></a></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">#在完成了nodejs环境搭建后，npm安装hexo并为其建立软链接即可。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">sudo ln -s &#x2F;app&#x2F;node-v12.13.1-linux-x64&#x2F;lib&#x2F;node_modules&#x2F;hexo-cli&#x2F;bin&#x2F;hexo &#x2F;usr&#x2F;local&#x2F;bin&#x2F;hexo</span></pre></td></tr></table></figure><p><img src="hexo-cli.png" alt="npm install hexo-cli -g" title="npm install hexo-cli -g"></p><h2><span id="chu-shi-hua-hexo">初始化hexo</span><a href="#chu-shi-hua-hexo" class="header-anchor"></a></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"># 初始化一个hexo项目，比如blog</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">hexo init blog</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"># 启动hexo服务</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">cd blog</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">hexo s</span></pre></td></tr></table></figure><p>浏览器打开<br><img src="localhost-4000.png" alt="localhost:4000" title="localhost:4000"></p><p>至此，hexo环境搭建完成。</p>]]></content>
    
    <summary type="html">
    
      Linux(manjaro/archlinux)下nodejs(npm) + hexo环境搭建
    
    </summary>
    
    
      <category term="hexo" scheme="http://log.cqh.ch/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://log.cqh.ch/tags/hexo/"/>
    
      <category term="javascript" scheme="http://log.cqh.ch/tags/javascript/"/>
    
      <category term="nodejs" scheme="http://log.cqh.ch/tags/nodejs/"/>
    
      <category term="npm" scheme="http://log.cqh.ch/tags/npm/"/>
    
      <category term="manjaro" scheme="http://log.cqh.ch/tags/manjaro/"/>
    
  </entry>
  
  <entry>
    <title>ValidationError: &#39;null&#39; is not a string!</title>
    <link href="http://log.cqh.ch/19/null-is-not-a-string.html"/>
    <id>http://log.cqh.ch/19/null-is-not-a-string.html</id>
    <published>2019-12-23T07:29:46.000Z</published>
    <updated>2020-01-02T02:24:46.455Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="wen-ti">问题</span><a href="#wen-ti" class="header-anchor"></a></h2><p>hexo报错ValidationError: ‘null’ is not a string!</p><h2><span id="yuan-yin">原因</span><a href="#yuan-yin" class="header-anchor"></a></h2><p>有某些属性没有填写，比如author属性，tag属性，categories属性等，导致该属性是空的，即null，所以报错。</p><h2><span id="jie-jue">解决</span><a href="#jie-jue" class="header-anchor"></a></h2><p>将空属性删除</p>]]></content>
    
    <summary type="html">
    
      ValidationError: &#39;null&#39; is not a string!
    
    </summary>
    
    
      <category term="hexo" scheme="http://log.cqh.ch/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://log.cqh.ch/tags/hexo/"/>
    
      <category term="debug" scheme="http://log.cqh.ch/tags/debug/"/>
    
  </entry>
  
  <entry>
    <title>template-render-error</title>
    <link href="http://log.cqh.ch/19/template-render-error.html"/>
    <id>http://log.cqh.ch/19/template-render-error.html</id>
    <published>2019-12-23T06:26:38.000Z</published>
    <updated>2020-01-02T02:27:00.915Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="template-render-error">Template render error</span><a href="#template-render-error" class="header-anchor"></a></h1><h2><span id="wen-ti">问题</span><a href="#wen-ti" class="header-anchor"></a></h2><p>hexo g 或 hexo s时报错如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo s</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">INFO  Start processing</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">FATAL Something&#39;s wrong. Maybe you can find the solution here: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;troubleshooting.html</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">Template render error: (unknown path)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  parseIf: expected elif, else, or endif, got end of file</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">$ hexo g</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">INFO  Start processing</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">FATAL Something&#39;s wrong. Maybe you can find the solution here: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;troubleshooting.html</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">Template render error: (unknown path)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  Error: Block &quot;title&quot; defined more than once.</span></pre></td></tr></table></figure><h2><span id="yuan-yin">原因</span><a href="#yuan-yin" class="header-anchor"></a></h2><p>模板参数传递错误，页面中含有的错误的引用，或引用未被代码块包含，解析会出问题。</p><h2><span id="jie-jue">解决</span><a href="#jie-jue" class="header-anchor"></a></h2><p>仔细检查引用的参数，确保没有错误或多次定义。如果是文章中演示，应将其放入代码段中。</p>]]></content>
    
    <summary type="html">
    
      Template render error: (unknown path)  parseIf: expected elif, else, or endif, got end of file Error: Block title defined more than once
    
    </summary>
    
    
      <category term="hexo" scheme="http://log.cqh.ch/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://log.cqh.ch/tags/hexo/"/>
    
      <category term="debug" scheme="http://log.cqh.ch/tags/debug/"/>
    
  </entry>
  
  <entry>
    <title>革新记之工作日程管理-考勤记录</title>
    <link href="http://log.cqh.ch/19/worktime-attendance.html"/>
    <id>http://log.cqh.ch/19/worktime-attendance.html</id>
    <published>2019-12-01T17:20:36.000Z</published>
    <updated>2020-01-02T13:51:26.387Z</updated>
    
    <content type="html"><![CDATA[<p>我真的很不喜欢无意义的简单重复，如果一件事情会重复，那么就应该考虑自动化的可能。这篇文章我要捣鼓的是考勤的问题。</p><p>考勤的流程是：月初排班——每日考勤登记——月末考勤统计。 我觉得这是一件很没有技术含量的事情，但是一旦出错，那绝对是严重影响生活质量的大事情。</p><p>我的设想是这样子的：<br>第一，既然有排班表，那么可以由排班表生成考勤登记表和考勤统计表；<br>第二，考勤登记表和考勤统计表完全可以整合成一个东西；<br>第三，可以根据考勤统计表自动对比考勤机数据（这一步不涉及我的工作，暂不表）。<br>第四，数据的共享及自动化将带来高效办公。</p><p>首先，要先编出排班表。因为上次研究的<a href="http://www.cqh.ch/log/201910/worktime-design.html" target="_blank" rel="noopener">算法漫步——排班算法设计</a>还没完成，我决定先使用办公表格实现我想要的东西，并且不使用宏编程而是单纯的公式，因为单位的电脑可能不支持宏。</p><p>先讲述下排班的思路设计：<br>主班排1人，值班排1人，休假排1人，补休排1人（昨日值班），其余人（若有）副班。因此，实际要编排的是主班、值班和休假的人员。<br>其他可以根据已有信息运算出来，比如：<br>补休的C7=B5,填充时注意首尾就可以了;<br>有点挑战的是副班的运算，我的思路将所有人定义成一个字符串，然后用SUBSTITUTE()公式将主班、值班、休假、补休替换成空字符，即可得到B8=<br>SUBSTITUTE(SUBSTITUTE(SUBSTITUTE(SUBSTITUTE($A$2,LEFT(B5,1),””),B4,””),B6,””),B7,””)。</p><p><img src="worktimeII1.png" alt="SUBSTITUTE" title="SUBSTITUTE"></p><p>然后，要根据排班表生成比较方便比对的信息串，我的思路是用, 连字符将主班、值班、休假、补休、副班、日期拼接成一个字符串。<br>之所以将日期置于结尾，是源于提取日期的方法及日期结构本身所限。目前我并不知道在办公表格中用公式直接提取字符串中的数字方法，所以我选择的是MID()截取的再用INT()转换的方式。而因为日期有可能是1位，也有可能是2位。为提取的普遍性，选择将日期置于末尾更为合理。如果是固定n个人参与排班的话，则MID()的起始位置n+1，截取的长度为2。<br>这些信息串最好按阵列放置，以便下一步引用，如图：<br><img src="worktimeII2.png" alt="信息阵列" title="信息阵列"></p><p>再者，信息的加工提取。先将信息阵列投射成信息串单列表，然后就可以做信息处理了：<br>日期C84=INT(MID(B84,6,2));<br>考勤状态的确定略显复杂，需要用到FIND()查找组合多重IF判断。思路是这样的：用FIND()得到信息串的索引，若为1则是主班标√，若为2则是值班标□，若为3则是休假标△，若为4则为补休标+，其他是副班标√。<br>D84=IF(FIND($D$83,B84,1)=1,”√”, IF(FIND($D$83,B84,1)=2,”□”, IF(FIND($D$83,B84,1)=3,”△”, IF(FIND($D$83,B84,1)=4,”+”,”√”))))</p><p><img src="worktimeII3.png" alt="FIND()查找组合多重IF判断" title="FIND()查找组合多重IF判断"></p><p>最后，将上步得到的信息按日期升序，转置变成横向，再适当编辑下，即可得到考勤记录表。</p><p><img src="worktimeII4.png" alt="考勤记录表-纵向" title="考勤记录表-纵向"></p><p><img src="worktimeII5.png" alt="考勤记录表-横向" title="考勤记录表-横向"></p><p>至此，由排班表生存考勤记录表的工作基本完成。之所以花时间去做出于两点原因：</p><p>其一是因为实现数据间的共享，可以省却很多不必要的工作。在有排班表的前提下，只要写个宏脚本，那么就可以自动生成一份考勤记录。每日只要在这份表上登记，月末自然就完成了统计。而有预排班做对照，考勤出现错误的情况能很好的比对出来。</p><p>其二是有过仅仅忘了打卡就白送一天的加班（没错双倍工资的那种）的经历，让我意识到，唯有用按部就班的程序方能对抗机械的制度及人。但仅仅确保考勤的正确是远远不够的，因为你无法确保和考勤机的数据是一致的，这才是最致命的。在尝试过让单位公开考勤机数据以便提前备注而未果之后，我能做到的确保自己无论如何不要忘记打卡，因此决定重启GTD体系，用日历和任务列表确保单位无法再因考勤问题扣我一分钱。是的，这个项目到这里并没有结束，下一步，我要做的是由排班表生成工作日历和任务列表。</p><p><strong>2020-01-02 更新</strong><br>虽然我知道这套方法还有待完善，但没想到当我一个月后再次使用时就出现了问题。这时，我去了乡下，剩下4个人参与排班，方案出现了bug。这时，我突然想起了当初学C语言时，老师说过“<em>数据结构决定算法设计</em>”，现在就到了印证的时候。</p><p>缺陷出现在<em>信息串</em>的编排上。原来的顺序“主班、值班、休假、补休、副班、日期”有一个前提就是主班、值班、休假、补休必须每天都有安排才行，而一旦出现不排休假或排多人休假的情形就会出现问题。<br>为了解决这个问题，必须引入哨兵或说定位符。如此的话，则需用CONCAT()代替, 进行信息拼接才能引入定位哨兵。然后用FIND()得到哨兵的位置，利用这个位置进行下一步的逻辑判断。<br>需要注意的是FIND(Find text, Text, Position)的函数构造，Position的意思查找的起始位置。为了不纠结Position，引入的哨兵最好不同，这样Position默认为1就好。<br>理论上，引入哨兵后，信息串的拼接顺序将变得不那么严格，但为了简化算法设计，顺序显然是优化项。<br>因为补休和值班的特殊性，将其放在开头固定其顺序是比较优化的做法。<br>至于日期就如之前说的因其位数不确定将其置于结尾才是正解。<br>主班和副班其实可以作整体行政班考虑，因其作息相同，考勤的标记也一致。</p><p>基于以上思路，信息串的拼接模式如下：<br>补休值班 - 休假 =  行政班～ 日期（引入了”-“, “=”, “~”3个哨兵）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">在这个模式下，若info为信息串，则有：</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">日期date &#x3D; &#x3D;INT(MID(info, FIND(&quot;~&quot;, info)+1, 2))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">某人日程状态state &#x3D; IF(FIND(somebody,info)&#x3D;1,&quot;+&quot;,  IF(FIND(somebody,info)&#x3D;2,&quot;□&quot;,  IF(FIND(somebody,info)&lt;FIND(&quot;&#x3D;&quot;, info),&quot;△&quot;,  &quot;√&quot;)))</span></pre></td></tr></table></figure><p>我也不知道这个方案是否就是通用的，至少目前来说，已经解决当下的问题。</p>]]></content>
    
    <summary type="html">
    
      由排班表自动生成考勤登记表和考勤统计表,并将其整合成一个东西,再根据考勤统计表自动对比考勤机数据,从而实现高效办公
    
    </summary>
    
    
      <category term="办公" scheme="http://log.cqh.ch/categories/%E5%8A%9E%E5%85%AC/"/>
    
    
      <category term="革新" scheme="http://log.cqh.ch/tags/%E9%9D%A9%E6%96%B0/"/>
    
      <category term="办公" scheme="http://log.cqh.ch/tags/%E5%8A%9E%E5%85%AC/"/>
    
      <category term="自动化" scheme="http://log.cqh.ch/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>LAKIA——SEC_ERROR_UNKNOWN_ISSUER + ssl.SSLCertVerificationError + urllib3.exceptions.MaxRetryError + requests.exceptions.SSLError</title>
    <link href="http://log.cqh.ch/19/sllerr.html"/>
    <id>http://log.cqh.ch/19/sllerr.html</id>
    <published>2019-10-30T13:06:00.000Z</published>
    <updated>2020-01-02T02:26:21.748Z</updated>
    
    <content type="html"><![CDATA[<p>2019年10月29日，我定向爬取金交所网站的爬虫出了故障，抛出ssl.SSLCertVerificationError + urllib3.exceptions.MaxRetryError + requests.exceptions.SSLError错误。金交所的数据对我的量化对冲研究至关重要，所以有了这篇Debug的文章。</p><p>用FireFox打开金交所的网站，页面如图：</p><p><img src="FireFox1.png" alt="warning: Potential Security Risk Ahead" title="warning: Potential Security Risk Ahead"></p><p>Advanced，Error code: SEC_ERROR_UNKNOWN_ISSUER</p><p><img src="FireFox2.png" alt="Error code: SEC\_ERROR\_UNKNOWN_ISSUER" title="Error code: SEC_ERROR_UNKNOWN_ISSUER"></p><p>Who care…Accept the Risk Continue</p><p><img src="FireFox3.png" alt="Connection Is Not Secure" title="Connection Is Not Secure"></p><p>Webpage works well unless you Remove Exception。</p><p>我并不关心金交所的ssl证书是否安全，我只关心中国贵金属的交易数据，所以我选择了无视。</p><p>回到爬虫上来，三个报错具体如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">ssl.SSLCertVerificationError: \[SSL: CERTIFICATE\_VERIFY\_FAILED\] certificate verify failed: unable to get local issuer certificate (_ssl.c:1076)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host&#x3D;&#39;www.sge.com.cn&#39;, port&#x3D;443): Max retries exceeded with url: &#x2F;graph&#x2F;quotations (Caused by SSLError(SSLCertVerificationError(1, &#39;\[SSL: CERTIFICATE\_VERIFY\_FAILED\] certificate verify failed: unable to get local issuer certificate (_ssl.c:1076)&#39;)))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">requests.exceptions.SSLError: HTTPSConnectionPool(host&#x3D;&#39;www.sge.com.cn&#39;, port&#x3D;443): Max retries exceeded with url: &#x2F;graph&#x2F;quotations (Caused by SSLError(SSLCertVerificationError(1, &#39;\[SSL: CERTIFICATE\_VERIFY\_FAILED\] certificate verify failed: unable to get local issuer certificate (_ssl.c:1076)&#39;)))</span></pre></td></tr></table></figure><p>后两个错误Caused by SSLError(SSLCertVerificationError)，因此先来解决第一个SSLCertVerificationError问题。</p><p>requests发生https请求时默认启用SSL验证，如果无法验证SSL证书，将会引发SSLError。故在发送请求时设置verify=False就好。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">response &#x3D; requests.post(url, headers&#x3D;headers, cookies&#x3D;cookies, data&#x3D;data, verify&#x3D;False)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">将验证关闭之后，程序可以运行，但会抛出如下警告：  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;urllib3&#x2F;connectionpool.py:851: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https:&#x2F;&#x2F;urllib3.readthedocs.io&#x2F;en&#x2F;latest&#x2F;advanced-usage.html#ssl-warnings  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">InsecureRequestWarning)</span></pre></td></tr></table></figure><p>这也很烦人，知道这是一个不安全的请求，不用一再的提醒，禁用安全提示就好。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">import urllib3</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">\# 禁用安全请求警告</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)</span></pre></td></tr></table></figure><p>至此，问题解决，谨以此记。</p>]]></content>
    
    <summary type="html">
    
      SEC_ERROR_UNKNOWN_ISSUER + ssl.SSLCertVerificationError + urllib3.exceptions.MaxRetryError + requests.exceptions.SSLError
    
    </summary>
    
    
      <category term="python" scheme="http://log.cqh.ch/categories/python/"/>
    
    
      <category term="debug" scheme="http://log.cqh.ch/tags/debug/"/>
    
      <category term="爬虫" scheme="http://log.cqh.ch/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="python" scheme="http://log.cqh.ch/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>算法漫步-排班算法设计</title>
    <link href="http://log.cqh.ch/19/worktime-design.html"/>
    <id>http://log.cqh.ch/19/worktime-design.html</id>
    <published>2019-10-29T14:30:00.000Z</published>
    <updated>2020-01-02T02:36:22.082Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="suan-fa-man-bu-pai-ban-suan-fa-she-ji">算法漫步-排班算法设计</span><a href="#suan-fa-man-bu-pai-ban-suan-fa-she-ji" class="header-anchor"></a></h1><p>为什么要思考排班的算法设计？当然是因为排班需要用到啊！记得当初学C语言的时候，老师说如果一段代码你写两次，最好封装成一个函数。这个函数思想深深的影响了我，以至于我把它扩展成：如果一件事情要重复做，最好做出一个可以调用的功能模块。可同时也有个问题困扰着我，要写出这个算法最少起码得花上24个小时吧，而排一个班只需要0.5个小时，写代码的时间已然够我排4年的班了…看问题不能太狭隘，虽然这个算法我可能4个月都用不到，但还有很多人用得到，只要整体节省的时间超过了我付出的时间，对社会而言就是一种进步。带着这种想法，我挖下了这个坑。这篇文章是关于排班的算法设计，至于代码实现，那真的是个大坑——得慢慢填，我也不知道这个坑什么时候能填完…….</p><p><strong>问题</strong></p><p>假设医院某科室，三班轮倒，如何实现自动排班算法？</p><p><strong>建模</strong></p><p>设日班为α（假设安排2人），中班为β（假设安排1人），夜班为γ（假设安排1人），休息为Δ（假设安排剩余人）。科室所有人设为全集合X=（ABCDEFGH），其中有些人（比如GH）不参与夜班γ，设为特殊人集合Z，正常人集合Y=X-Z。将其排入αβγΔ四种不同的状态，其实就是一个排列组合的问题。</p><p><strong>实现</strong></p><p>为方便解决这个问题，可以设计一种类似佛珠的闭环数据结构，假设该串佛珠有8个，一次只取4个相连的佛珠，排班就会变得如僧侣数佛珠一样。为平衡考虑，须将特殊人集合Z的元素均匀的插入到正常人集合Y中。</p><p>佛珠的数据结构如下：</p><p><img src="worktime1.png" alt="佛珠数据结构" title="佛珠数据结构"></p><p>接下来，让我们来数这串佛珠，也即是排班。</p><p>其中要注意的是夜班γ是最为特殊的，首先是因为排过夜班的第二天不会再参与排班，其次是某些怀孕、哺乳、大龄、新人或管理不会参与夜班。所以夜班γ必须优先考虑。</p><p>另外一点要注意的是，从哪开始的问题。第一天无所谓，但第二天的选择就会涉及公平的问题。最简单也最均衡的做法应该是：将第一天开始的佛珠（假设A第一天为夜班γ）移到最后，并将下一颗佛珠（则为B第二天为夜班γ）作为第二天的开始，如果遇到特殊的佛珠（如G或H）则轮空并选择下一颗，如此往复。具体如下：</p><p><img src="worktime2.png" alt="佛珠编排" title="佛珠编排"></p><p>从上可以看出，6轮为一循环（正常人集合Y的元素数），在一循环中，每人参与上班（αβγ）为3次，参与休息Δ为3次，实现了均衡。当然万恶的资本主义不会让人一年一半的时间（182.5天）都在休息，逐利的它会说你最多只能休104天，为此每天休息的不是4人。排假涉及人员的配置问题，若是安排过多人的休息意味人员的冗余将牵扯出裁员，这将会变得很严重，得先将人员配置的问题理顺才行。</p><p>假设一个遵纪守法的单位，实行8h×5d工作制，即职工每月可以休假8+天（年休104天），某部门不是实行双休而是轮休制，那么该部门应该配备多少人员呢？</p><p>设最少人员配置为x，则有：104 * x ≥ 30 / x * 12 * 8+，x ≥ √30，即最少应配备6人方能符合法律规定。</p><p>设最优人员配置为y，每日必须的人员配置为z，则有261 * y ≤ 365 * z，y ≤ 1.4z。</p><p>回到我们一开始的模型上，每日必须排班z = 4，则最优配置y = 6人，排休2人最为合理。那么z =3时，y = 5吗？因为y ≥ x ≥ √30 &gt; 5，配置5人显然不合法。而要变得合法，显然是支付双倍工资购买职工的休息时间。但前提是职工自愿，因为不能强迫加班。</p><p>至此人员配置的问题基本理顺。</p><p>）:未完待续 To be continued…</p>]]></content>
    
    <summary type="html">
    
      医院某科室,三班轮倒,如何实现自动排班.夜班必须优先考虑，首先是因为排过夜班的第二天不会再参与排班，其次是某些怀孕、哺乳、大龄、新人或管理不会参与夜班
    
    </summary>
    
    
      <category term="办公" scheme="http://log.cqh.ch/categories/%E5%8A%9E%E5%85%AC/"/>
    
    
      <category term="算法" scheme="http://log.cqh.ch/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="办公" scheme="http://log.cqh.ch/tags/%E5%8A%9E%E5%85%AC/"/>
    
      <category term="自动化" scheme="http://log.cqh.ch/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>药学漫步-一例卡前列素氨丁三醇不良反应(血氧下降)病例讨论</title>
    <link href="http://log.cqh.ch/19/carboprost.html"/>
    <id>http://log.cqh.ch/19/carboprost.html</id>
    <published>2019-10-17T22:54:18.000Z</published>
    <updated>2020-01-02T02:09:41.915Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="yao-xue-man-bu-yi-li-qia-qian-lie-su-an-ding-san-chun-bu-liang-fan-ying-xie-yang-xia-jiang-bing-li-tao-lun">药学漫步-一例卡前列素氨丁三醇不良反应(血氧下降)病例讨论</span><a href="#yao-xue-man-bu-yi-li-qia-qian-lie-su-an-ding-san-chun-bu-liang-fan-ying-xie-yang-xia-jiang-bing-li-tao-lun" class="header-anchor"></a></h1><p><strong>一）病历介绍</strong></p><p>患者，女，25岁，孕5产1，2015年11月剖宫产1次，人工流产3次。停经37周，下腹阵痛2小时。于2019-09-11 12：00入院，入院查体：生命体征正常，心肺听诊无异常；专科情况：腹部隆起，下腹耻骨联合上可见一长约14cm纵形手术疤痕组织，疤痕处无压痛，子宫轮廓清楚，宫高29cm，腹围89cm，胎头先露，入盆，胎心音142次/分，律齐，可触及规律宫缩，持续20秒，间歇2-3分钟，消毒内诊：宫颈软，消失，宫口开3cm，头先露，S-2，可触及水囊，羊水性质不详。入院诊断：1、疤痕子宫（剖宫产史）2、孕5产1孕37周头位临产，因“疤痕子宫”入院后积极行术前准备，术中见羊水II°污染，吸净羊水，量约800ml， 12：55以左枕前位取出壹活男婴，脐带绕颈1圈， Apgar评分8-10分，体重3250g， 因胎盘粘连，行人工剥离胎盘，胎盘胎膜剥离完整、黄染， 子宫下段后壁胎盘剥离面渗血厉害，给予1号合成线“8”字缝合4针后见子宫下段无渗血，用1号合成线连续缝合子宫切口并反向加固，在缝子宫第一道时见从子宫下段涌出暗红血液，子宫下段收缩差，子宫下段菲薄，予以2-0合成线8字缝合子宫下段前壁2针后出血减少，此时术中出血共约500ml，予以欣母沛250ug宫体注射，子宫收缩明显好转，继续缝合子宫切口，快缝完子宫切口时产妇频繁咳嗽，无胸闷、气促、血氧血压均正常，子宫切口、针眼等处无渗血，尿液清亮，量约100ml,不排外羊水栓塞的可能，予以20mg地塞米松预防性用药，同时抽血查血常规、凝血四项，缝完子宫后麻醉师发现祛除面罩产妇血氧下降至90以下，最低82，重新戴上氧气面罩后血氧上升到90以上，电话通知急救小组到场。检查子宫双侧附件肉眼未见异常，生理盐水冲洗腹腔，清理腹腔干净，再次检查子宫切口缝合处无出血，尿液清亮。清点器械光边等无误，逐层关腹。手术经过顺利，术中出血约500ml，输液1500ml，尿量200ml，清亮。术后掏出阴道凝血块约200ml，清除凝血块后未见活动性出血，护理垫上有大量粪便。术后留手术室观察近1小时，产妇除诉宫缩痛外，未再出现咳嗽、无胸闷、气促等不适，脱离氧气面罩未输氧30分钟血氧都在90以上，血压维持在100-120mmHg/70-85mmHg，脉搏在100次/分左右，呼吸20次/分，双肺呼吸音清，未闻及干湿啰音，心率：100次/分，未闻及病理性杂音，腹部切口无渗血，子宫质硬，阴道无活动性出血，尿液清亮，术后急诊床旁心电图无明显异常。遂嘱安返病房休息。术中血常规结果回报与术前无明显差异，凝血四项无异常，生命体征正常，子宫复旧可，阴道流血少。术后逐日恢复，于2019-09-19拆线出院。</p><p><strong>二）分析讨论</strong></p><p>在分析之前，先介绍一下，不良反应的评价方法，即关联性评价<br>①用药与不良反应/事件的出现有无合理的时间关系。<br>②反应是否符合该药已知的不良反应类型。<br>③停药或减量后，反应是否消失或减轻。<br>④再次使用可疑药品是否再次出现同样反应/事件。<br>⑤反应/事件是否可用并用药的作用、患者病情的进展、其他治疗的影响来解释。<br>在不良反应分析的5个原则选项中，前四个选项都选择“是”，则关联性评价应选“肯定”；前四个选项中有3个选择“是”，则关联性评价应选“很可能”；前四个选项中有2个选择“是”，则关联性评价应选“可能”。</p><p>根据病历介绍以及医嘱查询，总结用药情况如下：<br>硫酸镁4g + GS100ml ivgtt<br>阿托品针0.5mg 遵医遵未给药<br>益母草注射液 2ml 宫体注射<br>卡前列素氨丁三醇0.25mg 宫体注射<br>地塞米松注射液 20mg 给药方式不详</p><p>然后，说一下用药后反应。<br>一为咳嗽，呼吸抑制，血氧低至82，根据表述是发生在快缝完子宫切口时，此前用药有硫酸镁，益母草，卡前列素氨丁三醇，三药已知都有呼吸系统的不良反应：<br>硫酸镁通过镁离子抑制平滑肌钙离子的动作电位，肌肉兴奋性受抑制。可使宫缩频率减少，强度减弱，副作用就是呼吸也会同时受抑制，用药要监控呼吸不能低于16次/分钟。治疗早产的有效血镁浓度为2.1～2.9mmol/L，而出现呼吸抑制的浓度为5mmol/L。孕妇肾功能正常，静滴4g硫酸镁未能有效抑制宫缩，不太考虑其单独抑制了呼吸。<br>卡前列素氨丁三醇说明书指出某些患者使用后，可引起短暂的气管收缩，较为少见（1/1000&lt;发生率&lt;1/100）。<br>益母草没有详细相关文献和数据，可能在兴奋子宫平滑肌也会波及呼吸道。值得注意的是，患者后续仍给予 益母草注射液 2ml iv bid，未诉呼吸道症状，基本排除益母草的单独致因。<br>综上，不能排除卡前列素氨丁三醇单独导致了互相抑制，同时考虑硫酸镁和益母草也有协同的影响。</p><p>二为胃肠道反应，术后清理时发现，三药已知也都有胃肠道反应：<br>益母草没有详细相关文献和数据，胃肠道可能被兴奋了。患者后续用药，未诉消化道症状，基本排除益母草的单独致因。<br>卡前列素氨丁三醇说明书明确指出其可刺激胃肠道平滑肌，呕吐和腹泻发生率约为2/3，故建议同时加用止吐剂和止泻剂。<br>硫酸镁也有导泻作用，多发生大剂量（5～20g）口服在2～8h后，本例为静滴给药，故予排除。<br>另外不能排除的是生理性失禁，孕妇12：00入院，12：55产出男婴，可能未排空肠胃，分娩时肠道受到压迫导致失禁。</p><p>综上，胃肠道反应考虑卡前列素氨丁三醇成因较大，不能排除益母草参与协同以及生理性原因。</p><p>除了益母草外，其他药物未再次给药，也不好评价反应的减弱和消失是因停药还是给予了激素导致。故此对于此例出现的呼吸抑制和腹泻，卡前列素氨丁三醇的关联性评价结果为“可能”。</p>]]></content>
    
    <summary type="html">
    
      卡前列素氨丁三醇(欣母沛)不良反应(血氧下降)病例讨论
    
    </summary>
    
    
      <category term="药学" scheme="http://log.cqh.ch/categories/%E8%8D%AF%E5%AD%A6/"/>
    
    
      <category term="临床药学" scheme="http://log.cqh.ch/tags/%E4%B8%B4%E5%BA%8A%E8%8D%AF%E5%AD%A6/"/>
    
      <category term="病例讨论" scheme="http://log.cqh.ch/tags/%E7%97%85%E4%BE%8B%E8%AE%A8%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>药学漫步-一例药源性低血钾的病例分析</title>
    <link href="http://log.cqh.ch/19/kcl.html"/>
    <id>http://log.cqh.ch/19/kcl.html</id>
    <published>2019-10-07T13:39:37.000Z</published>
    <updated>2020-01-02T02:24:34.662Z</updated>
    
    <content type="html"><![CDATA[<p><strong>前言</strong></p><p>钾是生命的必需离子，低血钾常出现心律失常、心室颤动，甚至猝死等严重不良后果，故及时发现、预防低血钾极为重要。很多药物可致血钾降低，临床药师在实际工作，对这类药物的监护应予以重点关注。本文通过分析一例药物性低血钾的病例，为低血钾的药学监护提供参考。</p><p><strong>病史资料</strong></p><p>患者男性，62岁，因咳嗽、咳痰、气紧20余天，于2018年5月30日入住我院呼吸科，病历号654973。患者于20余天前拆解老旧房屋后开始出现咳嗽、咳痰，黄脓痰，量多，伴有活动后气紧，夜间可平卧，无发热，无咯血。2周前至瑞金市人民医院就诊，行胸部CT示:1.两肺感染性病变；2.纵膈淋巴结肿大。治疗上予美洛西林抗感染、止咳、化痰对症支持治疗后，现咳嗽稍减轻，咳白痰，活动后仍气紧。现为进一步诊治入住我院。本次起病以来，患者精神一般，饮食一般，睡眠一般，体力下降，二便正常，近期体重无明显增减。入院检查：钾3.90mmol/l，尿素氮4.64mmol/l，肌酐72μmol/l，丙氨酸氨基转移酶15U/L，天门冬氨酸氨基转移酶20U/L，r-谷氨酰转肽酶28U/L，胸部CT见双肺多发结节及斑片高密度影。入院诊断：双肺阴影性质待查:肺部感染?肺Ca?</p><p><strong>治疗经过</strong></p><p>第1天：根据影像学结果结合患者经历，考虑患者为真菌合并细菌感染可能性大，初始方案给予美罗培南1g q12h及伏立康唑胶囊 200mg q12h（负荷剂量400mg q12h）抗感染，予特布他林5mg +布地奈德2mg 雾化 q8h、多索茶碱注射液0.2g ivgtt qd平喘，盐酸溴己新葡萄糖注射液100ml ivgtt qd祛痰。第4天：停多索茶碱换为氨茶碱注射液 0.25g ivgtt qd，特布他林5mg +布地奈德2mg q8h改为q12h。第6天：患者诉视力障碍，怀疑为伏立康唑所致，停伏立康唑改用两性霉素B脂质10mg ivgtt qd。第7天：患者咳嗽咳痰有所好转，降美罗培南降阶为哌拉西林钠他唑巴坦钠2.5g ivgtt bid。第15天：复查血生化，丙氨酸氨基转移酶77U/L、天门冬氨酸氨基转移酶32U/L，r-谷氨酰转肽酶234U/L，钾3.12mmol/l↓，尿素氮12.60mmol/l，肌酐103umol/l。患者血钾轻度偏低，转氨酶偏高，尿素氮及肌酐也较入院时有较大程度上升，两性霉素B脂质已用至40mg，考虑其为两性霉素Ｂ脂质体不良反应所致，停两性霉素B脂质体改用注射用醋酸卡泊芬净50mg（负荷剂量70mg） ivgtt qd，加用注射用复方甘草酸苷20mg ivgtt qd护肝，氯化钾缓释片 1g po tid补钾。第22天：复查血生化，钾1.98mmol/l，乳酸脱氢酶266U/L，α－羟丁酸脱氢酶195U/L。尿素氮5.40mmol/l，肌酐119μmol/l，丙氨酸氨基转移酶21U/L、天门冬氨酸氨基转移酶19U/L，r-谷氨酰转肽酶133U/L。患者转氨酶有所回落，但出现重度低钾，且心肌酶谱偏高，在氯化钾缓释片 1g po tid基础上，增加10%氯化钾注射液15ml + NS500ml ivgtt bid，10%氯化钾注射液40ml 稀释后分次口服 qd。第23天：钾2.80mmol/l。第24天：患者因经济原因自动出院。</p><p><strong>分析讨论</strong></p><p>患者入院时血钾正常为3.90mmol/l,第15天复查发现轻度缺钾为3.12mmol/l，并予氯化钾缓释片1g po tid，但第22天复查时发现重度缺钾为1.98mmol/l。期间患者饮食正常，且未出现呕吐腹泻等大量丢失钾的情形，分析认为低钾为药源性所致。下面将对可致血钾降低的药物进行逐个分析。</p><p>特布他林为β受体激动剂，能兴奋细胞膜上Na-K-ATP酶，可使钾离子进入细胞内而引起血钾降低。布地奈德为糖皮质激素，其有微弱的盐皮质激素样作用，即促进肾小管重吸收钠而保留水并排泄钾。多索茶碱、氨茶碱为黄嘌呤类药物，一方面其可增强Na-K-ATP酶活性，使胞内摄取K增多，另一方面其能抑制肾小管对Na+和Cl-的再吸收，致使在远曲小管Na-—K+代偿交换增加，故使K+的排出增加[1]。有研究发现单用特布他林发生低钾概率为39.5%，特布他林联合布地奈德出现低钾概率为41.3%[2]。特布他林的说明书亦指出：特布他林与黄嘌呤类和类固醇合用，可加重低血钾症[3]。患者连续使用了12天的雾化用药，多索茶碱用了3天后氨茶碱接着用了12天，在时间上和第15天复查的低钾结果契合，故认为他们与低钾有比较密切的关系。</p><p>伏立康唑的说明书上低血钾症的发生率为1.6%，绝大多数的药物（&gt;94%）在给药（静脉滴注或口服）后96小时内经尿排出[4]。第5天，因患者出现视觉障碍而停用了伏立康唑，而轻度低钾出现在第15天，在时间方面伏立康唑与低钾的关系不大。</p><p>两性霉素B脂质体由两性霉素B和脂质体按1:7的摩尔比混合而成，其低血钾大多因为肾小管酸中毒，使Ｋ+排泄增多所致[5]。其说明书非比较试验中低血钾发生概率为7%（平均剂量≤1mg/kg），而在于比较实验中，两性霉素B脂质体低血钾和肌酐升高的发生率分别为26%、21%，普通两性霉素Ｂ则为29%、34%[6]。对比发现虽然脂质体的肾毒性减少了62%，但其低血钾概率只减少了11%。第15天复查时，两性霉素B脂质体已使用了9天，血生化显示肝肾功能异常和血钾下降。药师分析认为其与两性霉素B脂质体的不良反应有很大关系，故停用了两性霉素B脂质体改用卡泊芬净，并给予了补钾与护肝治疗。两性霉素B脂质体多次给药后其消除半衰期可达39小时，而给药49d 后，消除半衰期甚至可为100～153h，猜测终末半衰期长很可能与组织中药物缓慢再分布有关[7]。有报道称两性霉素Ｂ停药5天后发生了低血钾[8]，两性霉素Ｂ脂质体停药之后，其效应并不会立即消失，仍能继续降低血钾。有研究认为两性霉素B缺钾通常发生在使用6～38d内，为预防低钾, 治疗早期即应日补钾量在4g以上, 一旦出现血钾降低, 则大于6g[9]。因此，本例患者未预防性补钾，出现低钾后补钾量又不足，这也是导致进一步低钾的原因。</p><p>复方甘草酸苷亦有盐皮质类固醇样作用，能使肾素-血管紧张素-醛固酮轴明显抑制,致使保钠排钾。但在相关报道中，低血钾是在长期（大于1个月）应用甘草酸苷护肝后才出现的[10]。患者甘草酸苷使用仅为5天，分析认为其虽有降低血钾的作用，但却并非是血钾进一步降低的主要因素。</p><p>综上，患者因平喘药特布他林、布地奈德及茶碱类药物联合使用，存在低钾风险，加之第6天换用两性霉素Ｂ脂质体后，引起轻度缺钾。此后复方甘草酸苷对低钾也有影响，但更主要的可能是两性霉素B脂质体重新分布导致其低钾效应仍在持续，加之补钾量不足，导致了血钾进一步下降。</p><p><strong>总结</strong></p><p>细胞内保存了人体98%的钾离子，缺钾首先是细胞内钾离子的丢失，早期时血钾表现正常，但胞内其实可能已经缺钾。这个病例提示我们，对于较长时间行雾化及茶碱平喘患者，应对血钾进行监护；对于使用两性霉素Ｂ脂质体抗真菌治疗的患者，可先预防性补钾，出现低钾时则应足量补钾。临床药师应了解引起低钾的常见药物，并结合药代药动学，对低血钾的患者予以监护，才能更好防范药源性低血钾。</p><p><strong>参考文献</strong><br>    1.  萧春林,李军,陈媛,樊再雯.氨茶碱致低血钾3例[J]. 药物不良反应杂志,1999,(03):183-184.<br>    2.  谢彦奇,邓松青. 特布他林与布地奈德联合雾化吸入对婴幼儿血钾的影响[J]. 儿科药学杂志,2008,14(06):13-15.<br>    3.  硫酸特布他林雾化液（博利康尼 Bricanyl）中文说明书[M].2007-06-20. AstraZeneca AB<br>    4.  注射用伏立康唑（威凡 Vfend）中文说明书[M].2015-11-07. PFIZER PGM<br>    5.  刘晓东,李佳楠,孙浩,肇丽梅,菅凌燕. 两性霉素B与两性霉素B脂质体不良反应文献分析[J]. 中国临床药学杂志,2014,23(04):252-255.<br>    6.  注射用两性霉素B脂质体（安浮特克 Amphotec） 中文说明书[M].2007年5月24日.Three Rivers Pharmaceuticals.LLC<br>    7.  汪复,张婴元主编;朱德妹,汪复,张菁等编著. 实用抗感染治疗学 第2版[M].北京:人民卫生出版社.2012.<br>    8.  林平冬. 两性霉素B治疗隐球菌性脑膜炎致低血钾1例报告[J]. 河南实用神经疾病杂志,2004,(01):69-70.<br>    9.  陈江汉,温海,吴建华,朱元杰,陈孙孝,徐红,陈丽娜. 两性霉素B治疗隐球菌性脑膜脑炎的不良反应及其处理[J]. 第二军医大学学报,2005,(04):456-457.<br>    10.  常雪妮,杜航,董晨明. 复方甘草酸苷致严重低血钾、横纹肌溶解1例并文献复习[J]. 西北国防医学杂志,2018,39(05):311-312.<br>    11.  陈应文,田莉莉. 复方甘草酸苷片致严重低血钾二例报告[J]. 临床肝胆病杂志,2007,(03):237-238.</p>]]></content>
    
    <summary type="html">
    
      患者因平喘药特布他林、布地奈德及茶碱类药物联合使用，存在低钾风险，加之第6天换用两性霉素Ｂ脂质体后，引起轻度缺钾。此后复方甘草酸苷对低钾也有影响，但更主要的可能是两性霉素B脂质体重新分布导致其低钾效应仍在持续，加之补钾量不足，导致了血钾进一步下降
    
    </summary>
    
    
      <category term="药学" scheme="http://log.cqh.ch/categories/%E8%8D%AF%E5%AD%A6/"/>
    
    
      <category term="临床药学" scheme="http://log.cqh.ch/tags/%E4%B8%B4%E5%BA%8A%E8%8D%AF%E5%AD%A6/"/>
    
      <category term="病例分析" scheme="http://log.cqh.ch/tags/%E7%97%85%E4%BE%8B%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>药学漫步-一例利福平影响降血压疗效的病例分析</title>
    <link href="http://log.cqh.ch/19/rifampicin.html"/>
    <id>http://log.cqh.ch/19/rifampicin.html</id>
    <published>2019-10-01T01:18:08.000Z</published>
    <updated>2020-01-02T02:25:49.562Z</updated>
    
    <content type="html"><![CDATA[<p><strong>前言</strong></p><p>在我国，高血压和结核病均是发病率较高的疾病，有研究称结核患者中约有48.75%同时伴有高血压[1]，因此针对结核合并高血压患者的治疗用药，值得药师去关注。本文将分析降血压与抗结核药物之间的相互作用，探讨利福平对降血压疗效的影响，为合并高血压和结核的患者的用药提供参考，从而指导合理用药及更好的开展药学监护。</p><p><strong>病史资料</strong></p><p>患者男性，52岁，发现肾功能异常3年余，腰部疼痛1月，于2018年6月28日入住肾内科，病例号454785。患者因1月前厕所摔倒后，感腰部疼痛，活动困难，呈隐痛发作，压痛明显，持续不缓解。腰椎MR平扫示：1.L5/S1椎间盘后脱出并炎性改变，上下范围约44mm，椎管狭窄；L4/5椎间盘膨出并后突出，椎管狭窄；2.L2/3、L3/4椎间盘轻度膨出，L3/4椎间盘后缘破裂；腰椎间盘变性；3.腰椎骨质增生。10余天前感腰部疼痛加重，疼痛范围较前增大，自行服用塞来昔布止痛效果差，现为进一步诊治，入住我院。患者伴有高血压，分组为3级，规律服用硝苯地平、氯沙坦钾、多沙唑嗪，血压控制在140/90mmHg以下。</p><p><strong>治疗经过</strong></p><p>初始治疗方案予硝苯地平控释片（30 mg po bid）、氯沙坦钾片（50 mg po qd）、甲磺酸多沙唑嗪缓释片（4 mg po qn）控制血压，促红素纠正贫血，肾康注射液护肾，及每周3次血液透析等治疗。7月10日，患者腰部疼痛未有好转，行颈椎CT考虑结核可能性大，查T-SPOT阳性。予诊断性抗结核治疗，方案为利福平胶囊 0.45g po qd，吡嗪酰胺片 0.75g po 3/周，乙胺丁醇片 0.75g po 3/周，异烟肼片 0.3g po qd。7月12日，患者血压高达180/100mmHg，血压波动较大，开始给予硝普钠持续泵入。7月16日，患者诉腰部疼痛有所好转，考虑抗结核有效，加用盐酸左氧氟沙星胶囊（0.2 g po bid）。7月25日，患者拒绝继续泵入硝普钠，医嘱停利福平，其余抗结核用药不变，血压降至143/91mmHg。8月1日，患者好转出院，腰骶部疼痛有所缓解，血压126/84mmHg。</p><p>患者抗结核用药前后血压情况见图1：</p><p><img src="img/2019/blood-pressure.png" alt="图1 用药前后血压情况" title="图1 用药前后血压情况"></p><p><strong>分析讨论</strong></p><p>患者长期规律服用硝苯地平、氯沙坦钾、多沙唑嗪降压，血压控制良好。抗结核诊断治疗2天后，血压出现较大波动，开始给予硝普钠持续泵入。13天后，患者停用利福平和硝普钠后，血压降至140/90mmHg。因此，药师分析认为患者血压的变化和利福平的使用有很大关系。</p><p>有学者报道，非高血压患者抗结核治疗出现了血压升高的现象，可能有两个方面的原因，一是利福平导致交感神经兴奋，交感神经冲动增强，导致肾上腺髓质活动增加，醛固酮分泌增加，引起钠潴留，导致血压升高；二是利福平可引起患者失眠从而导致血压升高[2]。在一项针对高血压患者（16例氨氯地平，4例多沙唑嗪，4例美托洛尔）的研究则提示在应用利福平后，患者血压都升高，其中20例患者需要增加药物剂量以维持血压至140/90mmHg水平[4]。</p><p>患者所使用的3个降压药硝苯地平、氯沙坦钾、多沙唑嗪均通过肝药酶（CYP450）进行代谢，而利福平为肝药酶的强诱导剂，分析认为降压效果下降跟肝药酶的激活有关，通过文献[5-6]查得抗结核及降血压药物与CYP同工酶的作用关系，总结见表1，表2。</p><p>表1 常用抗结核药对CYP同工酶的影响</p><p>药物名称</p><p>CYP1A2</p><p>CYP2A6</p><p>CYP2C9</p><p>CYP2C19</p><p>CYP2D6</p><p>CYP3A4</p><p>利福平</p><p>／</p><p>＋</p><p>＋</p><p>＋</p><p>／</p><p>＋</p><p>异烟肼</p><p>－</p><p>－</p><p>－</p><p>－</p><p>－</p><p>－</p><p>乙胺丁醇</p><p>？</p><p>？</p><p>？</p><p>？</p><p>？</p><p>？</p><p>吡嗪酰胺</p><p>／</p><p>／</p><p>／</p><p>／</p><p>／</p><p>／</p><p><em>注：／：无影响；－：抑制；＋ ：诱导；？：目前不清楚。</em></p><p>表２　CYP诱导对降压药血药浓度的影响</p><p>CYP2A6</p><p>CYP2C9</p><p>CYP2C19</p><p>CYP3A4</p><p>CYP2E1</p><p>／</p><p>↓</p><p>／</p><p>↓</p><p>／</p><p>／</p><p>／</p><p>／</p><p>↓</p><p>／</p><p>／</p><p>／</p><p>↓</p><p>↓</p><p>／</p><p><em>注：／：无影响或影响微弱；↓：血药浓度低；？：目前不清楚。</em></p><p>从表1可以看出，抗结核用药中，利福平为肝药酶诱导剂，可诱导CYP2A6、CYP2C9、CYP2C19、CYP3A4激活。异烟肼为肝药酶抑制剂，可使CYP1A2、CYP2A6、CYP2C9、CYP2C19、CYP2D6、CYP3A4均受到抑制。虽然异烟肼对CYP450的作用与利福平相反，但当两者同时使用时，利福平对CYP的诱导作用占主导作用[6]。</p><p>从表2可以看出，氯沙坦钾通过CYP2C9及CYP3A4代谢，利福平的诱导作用可使代谢加快，从而使血药浓度下降。硝苯地平主要通过CYP3A4代谢，CYP3A4被诱导后将影响硝苯地平的首过效应和清除，使血药浓度下降。多沙唑嗪通过CYP3A4、CYP2D6及CYP2C19进行代谢，在利福平强诱导下血药浓度也将下降。</p><p>综上，抗结核治疗中，利福平对肝药酶的诱导作用将占主导地位，原降压方案硝苯地平控释片、氯沙坦钾片、甲磺酸多沙唑嗪缓释片的代谢都将被加快，使血药浓度下降，从而血压上升。而利福平虽不影响硝普钠降压效果，但硝普钠作用时间仅维持3～5分钟，可致氰化物中毒，一般仅紧急降压时使用。</p><p><strong>总结</strong></p><p>回顾此例病例，患者高血压3级，予抗结核诊断性治疗后，血压出现较大幅度的波动。临床药师查阅文献分析认为，利福平可诱导肝药酶激活，从而使通过肝药酶代谢的降压药代谢加快，血药浓度降低，从而使血压上升。在临床实践中，遇到高血压合并结核的患者，有三种思路：其一选择非经肝药酶代谢的降压药物，其二可行血药浓度监测增大给药剂量，其三抗结核方案中放弃利福平的使用。</p><p><strong>参考文献</strong><br>    1.  杨婧,谢周华,杨雅云.合并结核病的高血压患者降压药物的合理选择[J].中国处方药,2015,13(09):19-21.<br>    2.  李国境,才江平,魏宁.利福平致血压升高12例临床分析[J].宁夏医科大学学报,2018,40(04):460-461.<br>    3.  魏建华,高小娜,郭蕾.利福平引起血压升高的原因分析[J].宁夏医学杂志,2016,38(10):966-967.<br>    4.  Agrawal A, Agarwal SK, Kaleekal T, Gupta YK. Rifampicin and anti-hypertensive drugs in chronic kidney disease_ Pharmacokinetic interactions and their clinical impact. Indian J Nephrol. 2016 Sep;26(5):322-328.<br>    5.  高血压合理用药指南(第2版)[J].中国医学前沿杂志,2017,9(07):28-126.<br>    6.  甘道京,彭强,苏海.如何为合并结核病的高血压患者合理选择降压药物[J].中华高血压杂志,2014,22(04):301-303.<br>    7.  陈旭丽,王金明,杨赛成,王石健.利福平降低硝苯地平降压效果的案例分析[J].实用药物与临床,2014,17(12):1596-1597.<br>    8.  何赛珠,林茵,梁智江.利福平降低硝苯地平降压疗效的病例分析[J].今日药学,2015,25(10):733-735.</p>]]></content>
    
    <summary type="html">
    
      利福平可诱导肝药酶激活，从而使通过肝药酶代谢的降压药代谢加快，血药浓度降低，从而使血压上升。在临床实践中，遇到高血压合并结核的患者，有三种思路：其一选择非经肝药酶代谢的降压药物，其二可行血药浓度监测增大给药剂量，其三抗结核方案中放弃利福平的使用
    
    </summary>
    
    
      <category term="药学" scheme="http://log.cqh.ch/categories/%E8%8D%AF%E5%AD%A6/"/>
    
    
      <category term="临床药学" scheme="http://log.cqh.ch/tags/%E4%B8%B4%E5%BA%8A%E8%8D%AF%E5%AD%A6/"/>
    
      <category term="病例分析" scheme="http://log.cqh.ch/tags/%E7%97%85%E4%BE%8B%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>会计漫步-会计第三等式</title>
    <link href="http://log.cqh.ch/19/third-equation.html"/>
    <id>http://log.cqh.ch/19/third-equation.html</id>
    <published>2019-09-02T14:23:49.000Z</published>
    <updated>2020-02-04T01:54:15.361Z</updated>
    
    <content type="html"><![CDATA[<p><strong>账户</strong></p><p>会计要素具体化是会计科目，而会计科目落到实处为会计账户。而第三等式就是记录帐户的理论依据，也是记账基础。</p><p>很多会计基础教材，会花很大篇幅讲解借贷记账法下的账户结构，包括增加/减少/余额方向。其实没必要弄得这么复杂，记住借贷记账法是“左借右贷”，然后套在第三等式就行了，等式方向为增加和余额（动态要素无余额）方向，另一方则为减少方向，具体如下：</p><p><img src="third-equation.png" alt="会计第三等式" title="会计第三等式"></p><p>记住一个等式肯定要比记住六个账户结构要轻松，也比下面的总结表更简单，更有逻辑。由这个等式，可以推导出所有的账户结构。<br><img src="accout0.png" alt="会计账户结构" title="会计账户结构"></p><p><strong>分录</strong></p><p>一般说资产负债表是静态的，利润表是动态的。</p><p>那么静态表能否动态应用呢？比如记分录，答案是肯定的！只要将账户嵌入报表就可以，T型账户就很容易嵌入。比如下表是期初个人资产负债表：</p><p><img src="accout1.png" alt="期初资产负债表" title="期初资产负债表"></p><p>本月发生如下事项：<br>a.分期付款60 000购置汽车一辆。<br>b.以存款还信用卡1 000。<br>c.用现金支付应付款1 500。</p><p>该如何用资产负债表记录上述事项呢？可以将金额栏一分为二，然后按记账规则记入报表即可，如下表：<br><img src="accout2.png" alt="资产负债表记账" title="资产负债表记账"></p><p><strong>平衡</strong></p><p>如果按上表记账，可以看出复式借贷记账法的对称性，即有借必有贷。正常经济事项必然是对称的，I借II贷对称，III贷IV借对称，I借IV贷对称，II借III贷对称。不对称的事项当然是错误的，不可能发生I借III借或II贷IV贷这样的事情。这可以用来做试算平衡。</p><p><strong>报表</strong></p><p>静态表的动态运用当然还有第二阶段，即将动态表根据第三等式整合进静态表中去。下面是将支出收入表整入资产负债表的样子：<br><img src="accout3.png" alt="资产负债+支出收入表" title="资产负债+支出收入表"></p><p>由此不难看出，支出是具有资产性质，收入具有权益性质。又因动态要素一般结转无余额，故不体现在静态报表上。</p>]]></content>
    
    <summary type="html">
    
      会计第三等式（资产+成本+费用=负债+所有者权益+收入）的应用
    
    </summary>
    
    
      <category term="会计" scheme="http://log.cqh.ch/categories/%E4%BC%9A%E8%AE%A1/"/>
    
    
      <category term="资产负债表" scheme="http://log.cqh.ch/tags/%E8%B5%84%E4%BA%A7%E8%B4%9F%E5%80%BA%E8%A1%A8/"/>
    
      <category term="利润表" scheme="http://log.cqh.ch/tags/%E5%88%A9%E6%B6%A6%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>密码生成器(js+html)</title>
    <link href="http://log.cqh.ch/19/pswd.html"/>
    <id>http://log.cqh.ch/19/pswd.html</id>
    <published>2019-08-24T15:34:38.000Z</published>
    <updated>2020-01-02T02:25:08.058Z</updated>
    
    <content type="html"><![CDATA[<p>在完成<a href="http://www.cqh.ch/log/201908/randstr.html" target="_blank" rel="noopener">随机字符串生成器</a>后，实现一个密码生成器似乎是件没有难度的事情，但我还是想得太简单了。</p><p>首先是获得url中的参数，可以参考<a href="http://www.cqh.ch/log/201908/getsearch.html" target="_blank" rel="noopener">获取URL中的查询参数</a>。实际上，并不需要这么复杂的处理。这里只需要取得url中?之后的查询部分，简单粗暴用url = location.search.substr(1)就可以了。考虑到url中也可能没有查询部分，所以还得有判断和默认的逻辑。</p><p>然后是将生成的密码写到网页中去，这个用JS操作DOM并没有难度。考虑到可能有临时编辑的需要，宜用input或textarea标签。</p><p>再就是复制的功能，可以直接调用比较完善<a href="https://clipboardjs.com/" target="_blank" rel="noopener">clipboard.js</a>。文档介绍了两种方式，其他元素中用data-clipboard-target，自身属性用<code>data-clipboard-text</code>。文案写得清晰易懂，实现点击复制并不难。但我花了很多时间去思考实现自动复制。一个密码生成之后，除非需要编辑修改，否则当然就是复制。省事的做法是，密码生成后就自动复制到剪切板中去。所以要实现一个生成复制的函数。</p><p>起初，我用的是data-clipboard-target，无论是onLoad还是onClick都无法实现自动复制，也没有相关参考。直到在文档中看到动态设置文本用到getAttribute，我才反想到setAttribute。换用data-clipboard-text终于实现了我需要的功能。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">html</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset&#x3D;&quot;utf-8&quot; &#x2F;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width,user-scalable&#x3D;no,initial-scale&#x3D;1.0,maximum-scale&#x3D;1.0,minimum-scale&#x3D;1.0&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&lt;title&gt;PSWD&lt;&#x2F;title&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;head&gt;&lt;body &gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&lt;input type&#x3D;&quot;text&quot; id&#x3D;&quot;target&quot; &#x2F;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&lt;button type&#x3D;&quot;button&quot; id&#x3D;&quot;genCopy_&quot; onclick&#x3D;&#39;genCopy(this)&#39; &gt;genCopy&lt;&#x2F;button&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&lt;button type&#x3D;&quot;button&quot;  id&#x3D;&quot;gen_&quot; onclick&#x3D;&#39;gen()&#39;&gt;gen&lt;&#x2F;button&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">&lt;button type&#x3D;&quot;button&quot; id&#x3D;&quot;copy_&quot; onclick&#x3D;&#39;copy(this)&#39;&gt;copy&lt;&#x2F;button&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">&lt;button type&#x3D;&quot;button&quot; id&#x3D;&quot;save_&quot; onclick&#x3D;&#39;save(this)&#39;&gt;save&lt;&#x2F;button&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">&lt;br &#x2F;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">&lt;textarea id&#x3D;&quot;target2&quot; cols&#x3D;&quot;30&quot; rows&#x3D;&quot;30&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;textarea&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;body&gt;&lt;&#x2F;html&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;randstr.js&quot;&gt;&lt;&#x2F;script&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;pswd.js&quot;&gt;&lt;&#x2F;script&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;clipboard.min.js&quot;&gt;&lt;&#x2F;script&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">js</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">&#x2F;**</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">pswd.js</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">Ande.Studio</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">v3 20190826</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"> **&#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">target &#x3D; document.getElementById(&quot;target&quot;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">target2 &#x3D; document.getElementById(&quot;target2&quot;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">function gen(args&#x3D;&#39;nul8&#39;)&#123;&#x2F;&#x2F;密码生成</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">if(url &#x3D; location.search)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">args &#x3D; url.substr(1);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">str &#x3D; randstr(args);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">&#125;else&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">str &#x3D; randstr(args);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">target.value &#x3D; str;&#x2F;&#x2F;将str写入目标元素赋值</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">target2.value &#x3D; str + &#39;\n&#39; + target2.value;&#x2F;&#x2F;将str追加写入目标文本域</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">console.log(str);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">return str;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">function copy(obj)&#123;&#x2F;&#x2F;复制 </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">var clipboard &#x3D; new ClipboardJS(&quot;#&quot;+obj.id);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">document.getElementById(obj.id).setAttribute(&quot;data-clipboard-target&quot;,&quot;#target&quot;);&#x2F;&#x2F;data-clipboard-target，复制可见</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">function genCopy(obj)&#123;&#x2F;&#x2F;生成加复制 </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">gen();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">copy(obj);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;document.getElementById(obj.id).setAttribute(&quot;data-clipboard-text&quot;,gen());&#x2F;&#x2F;data-clipboard-text，复制过程不可见。假设在这条代码之前执行gen();copy(obj);会gen()2次，但只会copy最后一次gen()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;data-clipboard-target和data-clipboard-text同时存在的话，text将优先target会失效。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">function save()&#123;&#x2F;&#x2F;保存</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">window.onload &#x3D; function()&#123;&#x2F;&#x2F;载入调用</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">str &#x3D; gen();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">target2.value &#x3D; &#39;&#39;;&#x2F;&#x2F;清空gen()设置的target2值，以显示占位符</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">ph &#x3D; str + &#96;\n\n\n pswd.html?nul8</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">默认参数nul8，生成8位随机字符串，包含大小写字母数字</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">s:special character特殊字符</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line">n:number 数字</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line">u:upper case大写字母</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">l:lower case小写字母</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">数字用作控制生成随机字符的长度&#96;&#x2F;&#x2F;占位符</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;target2.setAttribute(&quot;placeholder&quot;,ph);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line">target2.placeholder&#x3D;ph;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line">&#x2F;**</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line">var obj &#x3D; new Object();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line">obj[&#39;id&#39;]&#x3D; &#39;genCopy_&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line">genCopy(obj);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">手工构造一个obj,指定obj[&#39;id&#39;]&#x3D;&#39;genCopy_&#39;或者obj.id&#x3D;&#39;genCopy_&#39;,以期在载入时调用genCopy(obj),实际上确实调用了且生成了密码且没有报错，但却不会实现复制。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line">这是值得注意的问题，具体的机制有待研究。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line">**&#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>Todo</p><p>js save()</p><p><img src="pswd.png" alt="电脑桌面端示例" title="电脑桌面端示例"></p><p><img src="pswd2.png" alt="手机移动端示例" title="手机移动端示例"></p><p>相关代码已放在github。</p><iframe src="https://ghbtns.com/github-btn.html?user=AndeStudio&amp;repo=password&amp;type=watch&amp;count=true&amp;size=large" allowtransparency="true" scrolling="0" width="152" height="30" frameborder="0"></iframe><iframe src="https://ghbtns.com/github-btn.html?user=AndeStudio&amp;repo=password&amp;type=fork&amp;count=true&amp;size=large" allowtransparency="true" scrolling="0" width="156" height="30" frameborder="0"></iframe>]]></content>
    
    <summary type="html">
    
      运用javascript + html写一个本地的，免安装的，很少依赖的，可定制的，也可远程的随机密码生成器
    
    </summary>
    
    
      <category term="javascript" scheme="http://log.cqh.ch/categories/javascript/"/>
    
    
      <category term="密码" scheme="http://log.cqh.ch/tags/%E5%AF%86%E7%A0%81/"/>
    
      <category term="clipboard.js" scheme="http://log.cqh.ch/tags/clipboard-js/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript获取URL中的查询参数</title>
    <link href="http://log.cqh.ch/19/getsearch.html"/>
    <id>http://log.cqh.ch/19/getsearch.html</id>
    <published>2019-08-23T12:48:51.000Z</published>
    <updated>2020-02-03T09:38:18.637Z</updated>
    
    <content type="html"><![CDATA[<p><strong>问题</strong></p><p>如何获取URL中的参数？</p><p><strong>解决方案</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;获取URL中的查询参数</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">function GetSearch() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">var url &#x3D; location.search;&#x2F;&#x2F;从问号 (?) 开始的 URL（查询部分）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">var obj &#x3D; new Object();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">if (url.indexOf(&quot;?&quot;) !&#x3D; -1) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">var str &#x3D; url.substr(1);&#x2F;&#x2F;取得问号之后的URL</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">str &#x3D; decodeURI(str);&#x2F;&#x2F;从地址栏取得的字符串可能已经被编码，解码得到原文。unescape()不能使用于对 URI精选解码，且ECMAScript v3 已从标准中删除了 unescape() 函数，并反对使用它，因此应该用 decodeURI() 和 decodeURIComponent() 取而代之。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">strs &#x3D; str.split(&quot;&amp;&quot;);&#x2F;&#x2F;将查询部分的字符串按&amp;分解成字符数组</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">for(var i &#x3D; 0; i &lt; strs.length; i ++) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">obj[strs[i].split(&quot;&#x3D;&quot;)[0]]&#x3D;strs[i].split(&quot;&#x3D;&quot;)[1];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">&#125; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">return obj;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">var obj &#x3D; GetSearch(); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;var keys &#x3D; Object.keys(obj)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">for(var k in obj) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">console.log(k,&quot;:&quot;,obj[k]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p><img src="GetSearch.png" alt="JavaScript获取URL中的查询参数" title="JavaScript获取URL中的查询参数"></p>]]></content>
    
    <summary type="html">
    
      JavaScript获取URL中的查询参数  
    
    </summary>
    
    
      <category term="javascript" scheme="http://log.cqh.ch/categories/javascript/"/>
    
    
      <category term="javascript" scheme="http://log.cqh.ch/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>document.getElementById(&quot;_id&quot;) is null</title>
    <link href="http://log.cqh.ch/19/jserr.html"/>
    <id>http://log.cqh.ch/19/jserr.html</id>
    <published>2019-08-22T23:31:01.000Z</published>
    <updated>2020-01-02T02:24:29.502Z</updated>
    
    <content type="html"><![CDATA[<p>错误原因:body还没有加载，此时，无法获取dom对象元素，则程序就会报错document.getElementById(“_id”) is null </p><p>解决办法就是将javascript代码写到body的元素的最后位置</p>]]></content>
    
    <summary type="html">
    
      document.getElementById(&quot;_id&quot;) is null
    
    </summary>
    
    
      <category term="javascript" scheme="http://log.cqh.ch/categories/javascript/"/>
    
    
      <category term="debug" scheme="http://log.cqh.ch/tags/debug/"/>
    
  </entry>
  
  <entry>
    <title>随机字符串生成器(JavaScript实现)</title>
    <link href="http://log.cqh.ch/19/randstr.html"/>
    <id>http://log.cqh.ch/19/randstr.html</id>
    <published>2019-08-22T16:14:27.000Z</published>
    <updated>2020-01-02T02:25:44.462Z</updated>
    
    <content type="html"><![CDATA[<p><strong>问题</strong><br>随机字符串最常见的用法作密码生成器，网上有很多相关文章。但我的需求有点特殊：这个生成器应该是本地的，免安装的，很少依赖的，可定制的，也可远程的。这样就排除了需要安装的app，依赖于网络及第三方的小程序或其他网络应用。</p><p><strong>解决方案</strong><br>javascript会是一个比较好的选择，只要嵌入进html文件中，就可以通过浏览器调用，实现本地化，免安装，很少依赖性。而通过地址栏的的url参数，实现可定制。而如果部署到网络空间上，可以远程调用。</p><p>首先我们需要随机生成一个数字，Math.random()*m 生成一个0~m的随机数，然后用这个随机数索引出一个随机字符。</p><p>可见字符的ascii码为33到126，以下取得随机字符的方法相当优雅：<br>String.fromCharCode(33 + Math.floor(Math.random()*(126-33)))<br>但因特殊字符分散在数字，大写字母，小写字母之间，并不连贯，要实现可定制比较费事。</p><p>解决之道是，先定制一个字符母串strs，用strs[Math.floor(Math.random()*strs.length]取得随机字符。以下是代码实现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">function randstr(args&#x3D;&#39;snul8&#39;)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;s:special character特殊字符</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;n:number数字</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;u:upper case大写字母</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;l:lower case小写字母</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;数字8用作控制生成随机字符的长度,也可以是其他数字</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;默认参数snul8，生成8位随机字符串，包含特殊字符，数字和大小写字母</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">var special &#x3D; &#39;!&quot;#$%&amp;\&#39;()*+,-.&#x2F;:;&lt;&#x3D;&gt;?@[\\]^_&#96;&#123;|&#125;~&#39;;&#x2F;&#x2F;有些特殊字符如&#39;和\要加\转义</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">var number &#x3D; &#39;0123456789&#39;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">var lower &#x3D; &#39;abcdefghijklmnopqrstuvwxyz&#39;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">var upper &#x3D; &#39;ABCDEFGHIJKLMNOPQRSTUVWXYZ&#39;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">var strs &#x3D; &#39;&#39;;&#x2F;&#x2F;用作母串载体</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">var str &#x3D; &#39;&#39;;&#x2F;&#x2F;用作随机字串载体</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">var num&#x3D; args.replace(&#x2F;[^0-9]&#x2F;ig,&quot;&quot;);&#x2F;&#x2F;取得args中的数字，作密码长度</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">if(args.search(&quot;s&quot;)!&#x3D;-1)&#123;&#x2F;&#x2F;如果args中有s,母串中含有特殊字符</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    strs +&#x3D; special;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">if(args.search(&quot;n&quot;)!&#x3D;-1)&#123;&#x2F;&#x2F;如果args中有n,母串中含有数字</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    strs +&#x3D; number;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">if(args.search(&quot;u&quot;)!&#x3D;-1)&#123;&#x2F;&#x2F;如果args中有u,母串中含有大写字母</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    strs +&#x3D; upper;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">if(args.search(&quot;l&quot;)!&#x3D;-1)&#123;&#x2F;&#x2F;如果args中有l,母串中含有小写字母</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    strs +&#x3D; lower;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">var len &#x3D; strs.length;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">for (i&#x3D;0; i&lt;num; i++)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">    j &#x3D; Math.floor(Math.random()*len);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">    str +&#x3D; strs[j]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">return str;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">str &#x3D; randstr(&#39;l6un&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">console.log(str);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">alert(str);</span></pre></td></tr></table></figure><p><img src="randstr.png" alt="随机字符生成器" title="随机字符生成器"></p><p><strong>讨论</strong></p><p>至此，我们已经实现了一个随机字符生成器，但要作为一个密码器使用，还是得完善一些东西。在某些浏览器上弹出窗口可能不能被复制，而很多移动终端并没有控制台，所以得将字符串写入网页中去。更进一步的，在网页还需要一键复制的按钮，以及远程保存的按钮。而如果涉及保存的话，还得实现加密，因为保存原始密码并不安全也不推荐。</p>]]></content>
    
    <summary type="html">
    
      随机字符串生成器(JavaScript实现)，本地的，免安装的，很少依赖的，可定制的，也可远程的
    
    </summary>
    
    
      <category term="javascript" scheme="http://log.cqh.ch/categories/javascript/"/>
    
    
      <category term="密码" scheme="http://log.cqh.ch/tags/%E5%AF%86%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>LAKIA-赶集网和58同城二手房爬虫</title>
    <link href="http://log.cqh.ch/19/ershoufang.html"/>
    <id>http://log.cqh.ch/19/ershoufang.html</id>
    <published>2019-08-11T13:27:20.000Z</published>
    <updated>2020-01-02T02:21:36.205Z</updated>
    
    <content type="html"><![CDATA[<p>最近在关注房产信息，天天刷网页或者关注经纪人朋友圈真的是一件极其耗费心神的事情，趁着周末想着写个爬虫自动完成这件事情。</p><p><img src="talk-is-cheap-show-me-the-code.jpg" alt="talk-is-cheap-show-me-the-code" title="talk-is-cheap-show-me-the-code"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"># ErShouFang.py</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"># Ganji.com  58.com 二手房爬虫</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"># Ande.Studio (c) 2019-08-11</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">import requests</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">from lxml import etree</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">import time</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">cookies &#x3D; &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">headers &#x3D; &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    &#39;User-Agent&#39;: &#39;Mozilla&#x2F;5.0 (X11; Linux x86_64; rv:68.0) Gecko&#x2F;20100101 Firefox&#x2F;68.0&#39;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">def GanjiErShouFang(url):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    response &#x3D; requests.post(url, headers&#x3D;headers, cookies&#x3D;cookies)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    html &#x3D; response.text</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    html &#x3D;  etree.HTML(html)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    flist &#x3D; html.xpath(&#39;&#x2F;&#x2F;div[@class&#x3D;&quot;f-list-item ershoufang-list&quot;]&#39;)#房屋信息列表</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    for f in flist:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        title &#x3D; f.xpath(&#39;.&#x2F;&#x2F;dd[@class&#x3D;&quot;dd-item title&quot;]&#x2F;a&#x2F;text()&#39;)[0]#标题</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        href &#x3D; f.xpath(&#39;.&#x2F;&#x2F;dd[@class&#x3D;&quot;dd-item title&quot;]&#x2F;a&#x2F;@href&#39;)[0]#链接地址</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        layout &#x3D; f.xpath(&#39;.&#x2F;&#x2F;dd[@class&#x3D;&quot;dd-item size&quot;]&#x2F;span&#x2F;text()&#39;)[0]#布局</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        size &#x3D;  f.xpath(&#39;.&#x2F;&#x2F;dd[@class&#x3D;&quot;dd-item size&quot;]&#x2F;span&#x2F;text()&#39;)[1]#面积大小</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        toward &#x3D; f.xpath(&#39;.&#x2F;&#x2F;dd[@class&#x3D;&quot;dd-item size&quot;]&#x2F;span&#x2F;text()&#39;)[2]#朝向</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        floor &#x3D; f.xpath(&#39;.&#x2F;&#x2F;dd[@class&#x3D;&quot;dd-item size&quot;]&#x2F;span&#x2F;text()&#39;)[3]#楼层</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">        address &#x3D; f.xpath(&#39;.&#x2F;&#x2F;dd[@class&#x3D;&quot;dd-item address&quot;]&#x2F;span[@class&#x3D;&quot;area&quot;]&#x2F;a&#x2F;text()&#39;)[0]#所在地址</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">        area &#x3D;  f.xpath(&#39;.&#x2F;&#x2F;dd[@class&#x3D;&quot;dd-item address&quot;]&#x2F;&#x2F;span[@class&#x3D;&quot;address-eara&quot;]&#x2F;text()&#39;)[0]#小区</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">        organization &#x3D; f.xpath(&#39;.&#x2F;&#x2F;dd[@class&#x3D;&quot;dd-item address&quot;]&#x2F;span[@class&#x3D;&quot;area&quot;]&#x2F;text()&#39;)[3]#发布组织</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">        organization &#x3D; organization.replace(&quot; &quot;, &#39;&#39;).replace(&quot;－&quot;, &#39;&#39;).replace(&quot;\n&quot;, &#39;&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">        manager &#x3D;  f.xpath(&#39;.&#x2F;&#x2F;dd[@class&#x3D;&quot;dd-item address&quot;]&#x2F;&#x2F;span[@class&#x3D;&quot;address-eara&quot;]&#x2F;text()&#39;)[1]#经纪人</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">        price &#x3D;  f.xpath(&#39;.&#x2F;&#x2F;dd[@class&#x3D;&quot;dd-item info&quot;]&#x2F;div[@class&#x3D;&quot;price&quot;]&#x2F;span[@class&#x3D;&quot;num&quot;]&#x2F;text()&#39;)[0]#房屋总价</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">        average &#x3D;  f.xpath(&#39;.&#x2F;&#x2F;dd[@class&#x3D;&quot;dd-item info&quot;]&#x2F;div[@class&#x3D;&quot;time&quot;]&#x2F;text()&#39;)[0]#房屋单价</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">        average &#x3D; average.replace(&quot;元&#x2F;㎡&quot;, &#39;&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">        print(title)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">    print(&quot;#&quot;*50)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">    try:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">        nextpage &#x3D; html.xpath(&#39;&#x2F;&#x2F;div[@class&#x3D;&quot;pageBox&quot;]&#x2F;&#x2F;a[@class&#x3D;&quot;next&quot;]&#x2F;@href&#39;)[0]#下一页</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">        time.sleep(3)#休息3秒，以防过频繁导致机器人验证</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">        GanjiErShouFang(nextpage)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">    except:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">        pass</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">def WubaErShouFang(url):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">    response &#x3D; requests.get(url, headers&#x3D;headers)#post will get nothing, get is ok!</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">    html &#x3D; response.text</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">    html &#x3D;  etree.HTML(html)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">    flist &#x3D; html.xpath(&#39;&#x2F;&#x2F;ul[@class&#x3D;&quot;house-list-wrap&quot;]&#x2F;li&#39;)#房屋信息列表</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">    for f in flist:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">        title  &#x3D; f.xpath(&#39;.&#x2F;&#x2F;h2[@class&#x3D;&quot;title&quot;]&#x2F;a&#x2F;text()&#39;)[0]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">        href &#x3D; f.xpath(&#39;.&#x2F;&#x2F;h2[@class&#x3D;&quot;title&quot;]&#x2F;a&#x2F;@href&#39;)[0]#链接地址</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">        layout &#x3D; f.xpath(&#39;.&#x2F;&#x2F;p[@class&#x3D;&quot;baseinfo&quot;]&#x2F;span&#x2F;text()&#39;)[0]#布局</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">        size &#x3D;  f.xpath(&#39;.&#x2F;&#x2F;p[@class&#x3D;&quot;baseinfo&quot;]&#x2F;span&#x2F;text()&#39;)[1]#面积大小</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">        toward &#x3D; f.xpath(&#39;.&#x2F;&#x2F;p[@class&#x3D;&quot;baseinfo&quot;]&#x2F;span&#x2F;text()&#39;)[2]#朝向</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">        floor &#x3D; f.xpath(&#39;.&#x2F;&#x2F;p[@class&#x3D;&quot;baseinfo&quot;]&#x2F;span&#x2F;text()&#39;)[3]#楼层</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">        address &#x3D; f.xpath(&#39;.&#x2F;&#x2F;p[@class&#x3D;&quot;baseinfo&quot;]&#x2F;&#x2F;a&#x2F;text()&#39;)[1]#所在地址</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">        area &#x3D;  f.xpath(&#39;.&#x2F;&#x2F;p[@class&#x3D;&quot;baseinfo&quot;]&#x2F;&#x2F;a&#x2F;text()&#39;)[0]#小区</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line">        #road &#x3D;  f.xpath(&#39;.&#x2F;&#x2F;p[@class&#x3D;&quot;baseinfo&quot;]&#x2F;&#x2F;a&#x2F;text()&#39;)[2]#</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">        #organization &#x3D; f.xpath(&#39;.&#x2F;&#x2F;div[@class&#x3D;&quot;jjrinfo&quot;]&#x2F;&#x2F;span[@class&#x3D;&quot;anxuan-qiye-text&quot;]&#x2F;text()&#39;)[0]#发布组织</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">        #manager &#x3D;  f.xpath(&#39;.&#x2F;&#x2F;div[@class&#x3D;&quot;jjrinfo&quot;]&#x2F;&#x2F;span[@class&#x3D;&quot;jjrname-outer&quot;]&#x2F;text()&#39;)[0]#经纪人</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">        #当经纪人为个人时， &lt;span class&#x3D;&quot;jjrname-outer anxuan-qiye-text&quot;&gt;xxx&lt;&#x2F;span&gt; 故用class定位将会出现意外</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">        organization &#x3D; f.xpath(&#39;.&#x2F;&#x2F;div[@class&#x3D;&quot;jjrinfo&quot;]&#x2F;&#x2F;span&#x2F;text()&#39;)[0]#发布组织</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line">        manager &#x3D;  f.xpath(&#39;.&#x2F;&#x2F;div[@class&#x3D;&quot;jjrinfo&quot;]&#x2F;&#x2F;span&#x2F;text()&#39;)[2]#经纪人</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line">        price &#x3D;  f.xpath(&#39;.&#x2F;&#x2F;div[@class&#x3D;&quot;price&quot;]&#x2F;p[@class&#x3D;&quot;sum&quot;]&#x2F;b&#x2F;text()&#39;)[0]#房屋总价</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line">        average &#x3D;  f.xpath(&#39;.&#x2F;&#x2F;div[@class&#x3D;&quot;price&quot;]&#x2F;p[@class&#x3D;&quot;unit&quot;]&#x2F;text()&#39;)[0]#房屋单价</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">        average &#x3D; average.replace(&quot;元&#x2F;㎡&quot;, &#39;&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line">        #time &#x3D; f.xpath(&#39;.&#x2F;&#x2F;div[@class&#x3D;&quot;time&quot;]&#x2F;text()&#39;)[0]#发布时间</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">82</span></pre></td><td class="code"><pre><span class="line">        print(title)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">83</span></pre></td><td class="code"><pre><span class="line">    print(&quot;#&quot;*50)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">84</span></pre></td><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">85</span></pre></td><td class="code"><pre><span class="line">    try:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">86</span></pre></td><td class="code"><pre><span class="line">        nextpage &#x3D; html.xpath(&#39;&#x2F;&#x2F;div[@class&#x3D;&quot;pager&quot;]&#x2F;&#x2F;a[@class&#x3D;&quot;next&quot;]&#x2F;@href&#39;)[0]#下一页</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">87</span></pre></td><td class="code"><pre><span class="line">        time.sleep(3)#休息3秒，以防过频繁导致机器人验证</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">88</span></pre></td><td class="code"><pre><span class="line">        WubaErShouFang( &#39;https:&#x2F;&#x2F;ganzhou.58.com&#39; + nextpage)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">89</span></pre></td><td class="code"><pre><span class="line">    except:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">90</span></pre></td><td class="code"><pre><span class="line">       pass</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">91</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">92</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">93</span></pre></td><td class="code"><pre><span class="line">url &#x3D; &#39;http:&#x2F;&#x2F;ganzhou.ganji.com&#x2F;shangyou&#x2F;ershoufang&#x2F;&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">94</span></pre></td><td class="code"><pre><span class="line">GanjiErShouFang(url)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">95</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">96</span></pre></td><td class="code"><pre><span class="line">url &#x3D; &#39;https:&#x2F;&#x2F;ganzhou.58.com&#x2F;shangyou&#x2F;ershoufang&#x2F;&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">97</span></pre></td><td class="code"><pre><span class="line">WubaErShouFang(url)</span></pre></td></tr></table></figure><p>运行结果：</p><p><img src="ershoufang.png" alt="运行结果" title="运行结果"></p><p>本来想着这是一个很小的项目，杀鸡焉用牛刀，所以放弃了使用Scrapy，自己从头写一个爬虫就够用了，但事情并不是如此简单。写爬虫的目的是为了获得数据从而利于决策，并不是简单输出就了事。首先它得提示我新的房产信息，其次它得在众多信息中计算性价比较高的选择，由此就埋下了两个坑。同时，在编程的过程中，我产了两个新的想法：一是对全国的房产数据进行取样制作房价指数，以利投资分析；二是不局限于房产信息，可以抓取其他数据发挥利用的价值。所以到头来，还是得用到框架。</p>]]></content>
    
    <summary type="html">
    
      Python实现58同城,赶集网ganji的二手房产信息爬虫
    
    </summary>
    
    
      <category term="python" scheme="http://log.cqh.ch/categories/python/"/>
    
    
      <category term="爬虫" scheme="http://log.cqh.ch/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
</feed>
